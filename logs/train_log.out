2021-01-16 18:20:45.687042: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
I0116 18:20:47.870698 140116968068992 main.py:264] {'name': 'efficientdet-d2', 'act_type': 'swish', 'image_size': (768, 768), 'target_size': None, 'input_rand_hflip': True, 'jitter_min': 0.1, 'jitter_max': 2.0, 'autoaugment_policy': None, 'grid_mask': False, 'sample_image': None, 'map_freq': 5, 'num_classes': 2, 'seg_num_classes': 3, 'heads': ['object_detection'], 'skip_crowd_during_training': True, 'label_map': {1: 'person', 2: 'car'}, 'max_instances_per_image': 100, 'regenerate_source_id': False, 'min_level': 3, 'max_level': 7, 'num_scales': 3, 'aspect_ratios': [1.0, 2.0, 0.5], 'anchor_scale': 4.0, 'is_training_bn': True, 'momentum': 0.9, 'optimizer': 'sgd', 'learning_rate': 0.08, 'lr_warmup_init': 0.008, 'lr_warmup_epoch': 1.0, 'first_lr_drop_epoch': 200.0, 'second_lr_drop_epoch': 250.0, 'poly_lr_power': 0.9, 'clip_gradients_norm': 10.0, 'num_epochs': 10, 'data_format': 'channels_last', 'label_smoothing': 0.0, 'alpha': 0.25, 'gamma': 1.5, 'delta': 0.1, 'box_loss_weight': 50.0, 'iou_loss_type': None, 'iou_loss_weight': 1.0, 'weight_decay': 4e-05, 'strategy': None, 'mixed_precision': False, 'loss_scale': None, 'model_optimizations': {}, 'box_class_repeats': 3, 'fpn_cell_repeats': 5, 'fpn_num_filters': 112, 'separable_conv': True, 'apply_bn_for_resampling': True, 'conv_after_downsample': False, 'conv_bn_act_pattern': False, 'drop_remainder': True, 'nms_configs': {'method': 'gaussian', 'iou_thresh': None, 'score_thresh': 0.0, 'sigma': None, 'pyfunc': False, 'max_nms_inputs': 0, 'max_output_size': 100}, 'fpn_name': None, 'fpn_weight_method': None, 'fpn_config': None, 'survival_prob': None, 'img_summary_steps': None, 'lr_decay_method': 'cosine', 'moving_average_decay': 0.9998, 'ckpt_var_scope': None, 'skip_mismatch': True, 'backbone_name': 'efficientnet-b2', 'backbone_config': None, 'var_freeze_expr': '(efficientnet|fpn_cells|resample_p6)', 'use_keras_model': True, 'dataset_type': None, 'positives_momentum': None, 'grad_checkpoint': False, 'model_name': 'efficientdet-d2', 'iterations_per_loop': 100, 'model_dir': './eagleview/checkpoints/finetuning', 'num_shards': 8, 'num_examples_per_epoch': 1813, 'backbone_ckpt': '', 'ckpt': './eagleview/checkpoints/pretrained/efficientdet-d2/', 'val_json_file': None, 'testdev_dir': None, 'profile': False, 'mode': 'train_and_eval'}
INFO:tensorflow:Using config: {'_model_dir': './eagleview/checkpoints/finetuning', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_checkpoint_save_graph_def': True, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
I0116 18:20:47.913446 140116968068992 estimator.py:191] Using config: {'_model_dir': './eagleview/checkpoints/finetuning', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_checkpoint_save_graph_def': True, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
INFO:tensorflow:Using config: {'_model_dir': './eagleview/checkpoints/finetuning', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_checkpoint_save_graph_def': True, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
I0116 18:20:47.914605 140116968068992 estimator.py:191] Using config: {'_model_dir': './eagleview/checkpoints/finetuning', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 100, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
, '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_checkpoint_save_graph_def': True, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}
I0116 18:20:47.915113 140116968068992 main.py:372] Folder ./eagleview/checkpoints/finetuning has no ckpt with valid step.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/training_util.py:236: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.
Instructions for updating:
Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.
W0116 18:20:47.921231 140116968068992 deprecation.py:339] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/training_util.py:236: Variable.initialized_value (from tensorflow.python.ops.variables) is deprecated and will be removed in a future version.
Instructions for updating:
Use Variable.read_value. Variables in 2.X are initialized automatically both in eager and graph (inside tf.defun) contexts.
2021-01-16 18:20:47.929119: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:20:47.932388: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcuda.so.1
2021-01-16 18:20:47.973606: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:20:47.974251: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:20:47.974289: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:20:47.976612: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:20:47.976691: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:20:47.978664: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:20:47.979310: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:20:47.981671: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:20:47.983040: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:20:47.987680: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:20:47.987846: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:20:47.988513: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:20:47.989065: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
I0116 18:20:48.247130 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:20:48.757705 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:20:48.765044 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:20:49.160411 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:20:49.161342 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:20:49.162412 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:20:49.163378 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:20:49.164251 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:20:49.165170 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:20:49.166146 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:20:49.167092 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:20:49.169121 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:20:49.170029 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:20:49.170881 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:20:49.171804 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:20:49.172679 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:20:49.173557 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:20:49.174538 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:20:49.175487 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:20:49.176862 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:20:49.177746 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:20:49.178730 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:20:49.179653 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:20:49.180656 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:20:49.181568 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:20:49.182472 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:20:49.183458 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:20:49.184881 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:20:49.185888 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:20:49.186859 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:20:49.187832 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:20:49.188785 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:20:49.189689 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:20:49.190610 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:20:49.191560 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:20:49.192992 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:20:49.193920 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:20:49.194813 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:20:49.195780 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:20:49.196758 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:20:49.197680 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:20:49.198691 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:20:49.199571 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:20:49.308318 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:20:49.308606 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:20:49.309036 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:20:49.339675 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:20:49.362543 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:20:49.390022 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:20:49.390339 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:20:49.390733 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:20:49.422373 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:20:49.445367 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:20:49.479293 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:20:49.479663 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:20:49.480090 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:20:49.509495 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:20:49.541505 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:20:49.564501 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:20:49.592468 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:20:49.592750 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:20:49.593107 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:20:49.623017 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:20:49.652879 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:20:49.676103 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:20:49.711322 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:20:49.711640 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:20:49.712016 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:20:49.742511 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:20:49.771392 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:20:49.793896 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:20:49.828375 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:20:49.828714 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:20:49.829103 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:20:49.857870 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:20:49.887914 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:20:49.911297 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:20:49.940831 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:20:49.941153 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:20:49.941562 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:20:49.970519 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:20:50.000212 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:20:50.027972 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:20:50.064764 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:20:50.065103 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:20:50.065514 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:20:50.095037 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:20:50.125802 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:20:50.149896 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:20:50.185068 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:20:50.185493 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:20:50.185940 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:20:50.216828 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:20:50.252383 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:20:50.280271 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:20:50.308755 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:20:50.309083 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:20:50.309490 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:20:50.340035 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:20:50.370518 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:20:50.393785 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:20:50.433503 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:20:50.433861 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:20:50.434321 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:20:50.466030 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:20:50.500266 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:20:50.527480 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:20:50.562647 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:20:50.563004 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:20:50.563422 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:20:50.593153 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:20:50.624147 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:20:50.648310 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:20:50.683390 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:20:50.683766 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:20:50.684198 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:20:50.714452 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:20:50.745838 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:20:50.769979 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:20:50.801679 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:20:50.802033 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:20:50.802500 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:20:50.836732 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:20:50.868172 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:20:50.891668 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:20:50.926666 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:20:50.927022 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:20:50.927420 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:20:50.957407 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:20:50.988126 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:20:51.011444 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:20:51.048553 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:20:51.048896 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:20:51.049358 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:20:51.080898 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:20:51.211974 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:20:51.240609 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:20:51.282572 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:20:51.283042 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:20:51.283487 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:20:51.314705 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:20:51.348895 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:20:51.372948 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:20:51.401207 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:20:51.401570 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:20:51.401971 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:20:51.436735 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:20:51.472877 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:20:51.498211 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:20:51.533393 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:20:51.533739 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:20:51.534164 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:20:51.569090 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:20:51.603828 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:20:51.630294 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:20:51.665693 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:20:51.666038 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:20:51.666464 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:20:51.702500 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:20:51.739791 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:20:51.765479 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:20:51.800940 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:20:51.801300 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:20:51.801710 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:20:51.836328 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:20:51.871989 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:20:51.902101 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:20:51.939886 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:20:51.940263 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:20:51.940690 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:20:51.975695 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:20:52.010678 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:20:52.036544 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:20:52.068521 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:20:52.068949 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:20:52.069504 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:20:52.105561 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:20:52.141694 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:20:52.168751 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:20:52.205839 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:20:56.454435 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:20:56.757782 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:20:56.760911 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:20:56.763804 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:20:56.766708 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:20:56.769679 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:20:56.772607 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:20:56.776797 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:20:56.795762 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:20:58.794354 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:21:10.927941 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:21:10.928117 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:21:10.935345 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:21:10.935501 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:21:10.935611 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:21:10.935711 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:21:10.935857 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:21:10.942837 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:21:10.942976 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:21:10.944494 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:21:10.944941 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:21:15.711127 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:21:15.712285 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:21:22.799797 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:21:22.800408: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:21:22.800625: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:21:22.801268: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:21:22.801325: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:21:22.801399: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:21:22.801437: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:21:22.801459: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:21:22.801480: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:21:22.801500: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:21:22.801522: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:21:22.801550: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:21:22.801648: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:21:22.802402: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:21:22.802971: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:21:22.803032: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:21:23.510020: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:21:23.510072: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:21:23.510084: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:21:23.510291: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:21:23.510925: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:21:23.511567: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:21:23.512076: W tensorflow/core/common_runtime/gpu/gpu_bfc_allocator.cc:39] Overriding allow_growth setting because the TF_FORCE_GPU_ALLOW_GROWTH environment variable is set. Original config value was 0.
2021-01-16 18:21:23.512123: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
2021-01-16 18:21:23.999859: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:196] None of the MLIR optimization passes are enabled (registered 0 passes)
2021-01-16 18:21:25.059131: I tensorflow/core/platform/profile_utils/cpu_utils.cc:112] CPU Frequency: 2200000000 Hz
INFO:tensorflow:Running local_init_op.
I0116 18:21:30.948367 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:21:31.299580 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 0...
I0116 18:21:48.098936 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 0...
INFO:tensorflow:Saving checkpoints for 0 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:21:48.120639 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 0 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 0...
I0116 18:21:52.682405 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 0...
2021-01-16 18:21:53.528607: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:116] None of the MLIR optimization passes are enabled (registered 2)
2021-01-16 18:22:03.222305: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:22:05.681377: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
INFO:tensorflow:loss = 26.934093, step = 0
I0116 18:22:08.972749 140116968068992 basic_session_run_hooks.py:262] loss = 26.934093, step = 0
INFO:tensorflow:box_loss = 0.0032329448, cls_loss = 26.677727, det_loss = 26.839375, step = 0
I0116 18:22:08.973548 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.0032329448, cls_loss = 26.677727, det_loss = 26.839375, step = 0
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 100...
I0116 18:24:41.290290 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 100...
INFO:tensorflow:Saving checkpoints for 100 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:24:41.290641 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 100 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 100...
I0116 18:24:47.978670 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 100...
INFO:tensorflow:global_step/sec: 0.623871
I0116 18:24:49.163447 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.623871
INFO:tensorflow:loss = 0.7968192, step = 100 (160.300 sec)
I0116 18:24:49.272227 140116968068992 basic_session_run_hooks.py:260] loss = 0.7968192, step = 100 (160.300 sec)
INFO:tensorflow:box_loss = 0.005856425, cls_loss = 0.40931424, det_loss = 0.70213544, step = 100 (160.299 sec)
I0116 18:24:49.272695 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.005856425, cls_loss = 0.40931424, det_loss = 0.70213544, step = 100 (160.299 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 113...
I0116 18:25:03.143466 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 113...
INFO:tensorflow:Saving checkpoints for 113 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:25:03.143744 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 113 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 113...
I0116 18:25:08.046169 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 113...
INFO:tensorflow:Loss for final step: 0.7016211.
I0116 18:25:08.692077 140116968068992 estimator.py:350] Loss for final step: 0.7016211.
INFO:tensorflow:Calling model_fn.
I0116 18:25:09.189429 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:25:09.192816 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:25:09.951402 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:25:09.952534 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:25:09.953534 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:25:09.954766 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:25:09.955717 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:25:09.956694 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:25:09.957579 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:25:09.958505 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:25:09.959810 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:25:09.960720 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:25:09.961782 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:25:09.962742 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:25:09.963670 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:25:09.964605 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:25:09.965524 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:25:09.966461 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:25:09.967987 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:25:09.968911 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:25:09.969840 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:25:09.970804 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:25:09.971664 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:25:09.972581 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:25:09.973591 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:25:09.974578 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:25:09.976046 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:25:09.976918 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:25:09.977826 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:25:09.978736 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:25:09.979725 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:25:09.980609 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:25:09.981493 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:25:09.982406 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:25:09.983756 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:25:09.984610 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:25:09.985669 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:25:09.986562 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:25:09.987449 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:25:09.988328 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:25:09.989255 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:25:09.990147 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:25:10.078283 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:25:10.078527 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:25:10.078924 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:25:10.101663 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:25:10.124713 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:25:10.146320 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:25:10.146616 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:25:10.147027 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:25:10.178587 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:25:10.205965 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:25:10.231560 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:25:10.231977 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:25:10.232487 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:25:10.258727 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:25:10.282943 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:25:10.307147 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:25:10.329002 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:25:10.329310 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:25:10.329698 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:25:10.351330 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:25:10.374770 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:25:10.397210 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:25:10.418371 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:25:10.418707 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:25:10.419162 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:25:10.441069 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:25:10.466370 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:25:10.489658 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:25:10.514696 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:25:10.515156 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:25:10.515701 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:25:10.539143 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:25:10.563551 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:25:10.586916 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:25:10.608167 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:25:10.608477 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:25:10.608855 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:25:10.634524 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:25:10.658665 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:25:10.687027 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:25:10.711518 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:25:10.711853 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:25:10.712320 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:25:10.736592 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:25:10.759674 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:25:10.783152 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:25:10.804881 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:25:10.805265 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:25:10.805649 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:25:10.828428 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:25:10.851645 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:25:10.874884 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:25:10.896218 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:25:10.896515 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:25:10.896881 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:25:10.919078 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:25:10.942300 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:25:10.968196 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:25:10.991834 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:25:10.992171 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:25:10.992604 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:25:11.014523 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:25:11.040242 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:25:11.063891 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:25:11.086210 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:25:11.086531 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:25:11.086899 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:25:11.108867 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:25:11.133033 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:25:11.157075 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:25:11.179225 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:25:11.179551 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:25:11.179956 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:25:11.202825 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:25:11.227473 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:25:11.251833 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:25:11.276566 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:25:11.276900 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:25:11.277347 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:25:11.300648 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:25:11.324235 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:25:11.348209 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:25:11.371073 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:25:11.371392 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:25:11.371773 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:25:11.394550 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:25:11.418238 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:25:11.443062 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:25:11.467138 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:25:11.467500 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:25:11.467901 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:25:11.491378 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:25:11.515577 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:25:11.546116 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:25:11.570263 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:25:11.570838 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:25:11.571394 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:25:11.595480 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:25:11.619729 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:25:11.643455 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:25:11.666045 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:25:11.666381 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:25:11.666793 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:25:11.694684 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:25:11.722879 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:25:11.747632 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:25:11.769977 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:25:11.770400 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:25:11.770914 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:25:11.800197 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:25:11.831435 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:25:11.857332 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:25:11.880801 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:25:11.881130 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:25:11.881576 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:25:11.909613 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:25:11.937829 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:25:11.963324 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:25:11.988390 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:25:11.988699 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:25:11.989079 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:25:12.016715 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:25:12.045571 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:25:12.071912 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:25:12.104622 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:25:12.105011 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:25:12.105449 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:25:12.133496 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:25:12.163028 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:25:12.188288 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:25:12.210829 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:25:12.211159 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:25:12.211596 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:25:12.241305 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:25:12.273032 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:25:12.299738 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:25:12.324095 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:25:15.914826 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:25:16.268442 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:25:16.822695 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:25:16.869686 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:25:17.708607 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:25:17Z
I0116 18:25:17.727055 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:25:17Z
INFO:tensorflow:Graph was finalized.
I0116 18:25:18.398539 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:25:18.398939: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:25:18.399159: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:25:18.399688: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:25:18.399754: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:25:18.399821: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:25:18.399854: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:25:18.399875: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:25:18.399897: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:25:18.399922: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:25:18.399947: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:25:18.399973: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:25:18.400070: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:25:18.400612: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:25:18.400996: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:25:18.401158: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:25:18.401190: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:25:18.401204: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:25:18.401325: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:25:18.401766: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:25:18.402167: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-113
I0116 18:25:18.402353 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-113
INFO:tensorflow:Running local_init_op.
I0116 18:25:20.221459 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:25:20.312558 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:25:25.654372 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:25:26.977429 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:25:28.523798 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:25:30.260797 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:25:31.669207 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:25:33.313912 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:25:34.931026 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:25:36.725796 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:25:38.305401 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:25:39.898026 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:25:41.412441 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:25:43.100355 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:25:44.966540 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:25:46.791277 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 41.02808s
I0116 18:25:58.755320 140116968068992 evaluation.py:273] Inference Time : 41.02808s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:25:58
I0116 18:25:58.755718 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:25:58
INFO:tensorflow:Saving dict for global step 113: AP = 0.07126413, AP50 = 0.08861386, AP75 = 0.08344268, AP_/car = 0.09834653, AP_/person = 0.044181734, APl = 0.14952229, APm = 0.0, APs = 0.0, ARl = 0.15084745, ARm = 0.0, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06875431, ARs = 0.0, box_loss = 0.00439296, cls_loss = 0.39042872, global_step = 113, loss = 0.7047583
I0116 18:25:58.755956 140116968068992 estimator.py:2066] Saving dict for global step 113: AP = 0.07126413, AP50 = 0.08861386, AP75 = 0.08344268, AP_/car = 0.09834653, AP_/person = 0.044181734, APl = 0.14952229, APm = 0.0, APs = 0.0, ARl = 0.15084745, ARm = 0.0, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06875431, ARs = 0.0, box_loss = 0.00439296, cls_loss = 0.39042872, global_step = 113, loss = 0.7047583
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 113: ./eagleview/checkpoints/finetuning/model.ckpt-113
I0116 18:26:00.309301 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 113: ./eagleview/checkpoints/finetuning/model.ckpt-113
INFO:tensorflow:./eagleview/checkpoints/finetuning/archive/model.ckpt-113 is not in all_model_checkpoint_paths. Manually adding it.
I0116 18:26:00.389487 140116968068992 checkpoint_management.py:102] ./eagleview/checkpoints/finetuning/archive/model.ckpt-113 is not in all_model_checkpoint_paths. Manually adding it.
I0116 18:26:00.390116 140116968068992 utils.py:474] Copying checkpoint ./eagleview/checkpoints/finetuning/model.ckpt-113 to ./eagleview/checkpoints/finetuning/archive
I0116 18:26:00.545430 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:26:00.974050 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:26:00.977028 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:26:01.363059 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:26:01.364038 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:26:01.365000 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:26:01.365906 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:26:01.366865 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:26:01.367740 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:26:01.368616 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:26:01.369445 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:26:01.370815 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:26:01.371752 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:26:01.373521 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:26:01.374391 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:26:01.375274 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:26:01.376068 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:26:01.376922 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:26:01.377785 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:26:01.379196 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:26:01.380035 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:26:01.380936 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:26:01.381922 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:26:01.382788 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:26:01.383751 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:26:01.384852 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:26:01.385843 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:26:01.387205 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:26:01.388075 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:26:01.388906 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:26:01.389744 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:26:01.390784 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:26:01.391677 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:26:01.392537 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:26:01.393500 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:26:01.394930 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:26:01.395887 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:26:01.396892 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:26:01.397803 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:26:01.398911 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:26:01.400435 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:26:01.401441 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:26:01.402338 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:26:01.494506 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:26:01.494729 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:26:01.495100 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:26:01.525940 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:26:01.550105 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:26:01.578821 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:26:01.579109 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:26:01.579526 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:26:01.610346 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:26:01.637455 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:26:01.674082 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:26:01.674463 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:26:01.674859 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:26:01.704605 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:26:01.735265 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:26:01.759100 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:26:01.788057 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:26:01.788371 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:26:01.788771 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:26:01.818463 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:26:01.849295 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:26:01.874603 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:26:01.911494 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:26:01.911831 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:26:01.912263 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:26:01.945626 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:26:01.975940 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:26:01.999880 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:26:02.036264 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:26:02.036632 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:26:02.037028 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:26:02.067610 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:26:02.098335 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:26:02.122674 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:26:02.152959 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:26:02.153307 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:26:02.153688 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:26:02.183704 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:26:02.214424 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:26:02.238097 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:26:02.274096 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:26:02.274444 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:26:02.274853 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:26:02.305032 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:26:02.343418 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:26:02.368136 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:26:02.403787 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:26:02.404168 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:26:02.404568 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:26:02.436407 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:26:02.467921 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:26:02.491534 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:26:02.521373 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:26:02.521686 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:26:02.522146 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:26:02.552306 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:26:02.582846 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:26:02.606096 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:26:02.642776 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:26:02.643088 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:26:02.643481 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:26:02.673102 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:26:02.705120 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:26:02.733277 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:26:02.769546 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:26:02.769894 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:26:02.770363 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:26:02.799756 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:26:02.830438 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:26:02.854644 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:26:02.889815 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:26:02.890155 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:26:02.890548 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:26:02.921579 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:26:02.954468 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:26:02.978698 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:26:03.008279 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:26:03.008600 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:26:03.009018 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:26:03.039946 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:26:03.071268 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:26:03.095388 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:26:03.138424 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:26:03.138909 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:26:03.139488 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:26:03.177359 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:26:03.215726 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:26:03.240089 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:26:03.276114 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:26:03.276483 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:26:03.276897 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:26:03.307615 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:26:03.345873 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:26:03.370652 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:26:03.405444 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:26:03.405824 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:26:03.406232 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:26:03.436502 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:26:03.469055 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:26:03.496327 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:26:03.525604 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:26:03.526018 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:26:03.526424 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:26:03.563445 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:26:03.598231 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:26:03.623702 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:26:03.661215 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:26:03.661547 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:26:03.661952 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:26:03.698116 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:26:03.734001 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:26:03.759848 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:26:03.796135 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:26:03.796466 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:26:03.796901 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:26:03.830954 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:26:03.868854 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:26:03.893763 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:26:03.932487 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:26:03.932832 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:26:03.933277 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:26:03.969047 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:26:04.004788 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:26:04.030483 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:26:04.066678 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:26:04.067068 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:26:04.067466 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:26:04.102655 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:26:04.141543 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:26:04.168267 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:26:04.198553 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:26:04.198864 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:26:04.199267 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:26:04.235202 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:26:04.273376 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:26:04.302488 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:26:04.339863 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:26:08.466655 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:26:08.759910 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:26:08.763023 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:26:08.766075 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:26:08.768784 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:26:08.771652 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:26:08.774914 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:26:08.779304 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:26:08.797852 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:26:10.809221 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:26:23.028779 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:26:23.028970 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:26:23.035726 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:26:23.035905 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:26:23.036025 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:26:23.036128 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:26:23.036238 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:26:23.043334 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:26:23.043456 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:26:23.048126 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
I0116 18:26:23.049228 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:26:28.332256 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:26:28.333429 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:26:31.419893 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:26:31.420347: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:26:31.420556: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:26:31.421066: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:26:31.421125: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:26:31.421202: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:26:31.421233: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:26:31.421251: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:26:31.421270: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:26:31.421289: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:26:31.421307: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:26:31.421324: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:26:31.421415: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:26:31.421882: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:26:31.422268: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:26:31.422315: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:26:31.422332: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:26:31.422342: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:26:31.422442: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:26:31.422872: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:26:31.423243: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-113
I0116 18:26:31.423874 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-113
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1076: get_checkpoint_mtimes (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file utilities to get mtimes.
W0116 18:26:34.921887 140116968068992 deprecation.py:339] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1076: get_checkpoint_mtimes (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file utilities to get mtimes.
INFO:tensorflow:Running local_init_op.
I0116 18:26:36.759977 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:26:37.115908 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 113...
I0116 18:26:53.962640 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 113...
INFO:tensorflow:Saving checkpoints for 113 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:26:53.983691 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 113 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 113...
I0116 18:26:58.669603 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 113...
INFO:tensorflow:loss = 0.71495986, step = 113
I0116 18:27:10.029905 140116968068992 basic_session_run_hooks.py:262] loss = 0.71495986, step = 113
INFO:tensorflow:box_loss = 0.004315106, cls_loss = 0.4045203, det_loss = 0.6202756, step = 113
I0116 18:27:10.030281 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.004315106, cls_loss = 0.4045203, det_loss = 0.6202756, step = 113
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 213...
I0116 18:30:00.883751 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 213...
INFO:tensorflow:Saving checkpoints for 213 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:30:00.884111 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 213 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 213...
I0116 18:30:05.969223 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 213...
INFO:tensorflow:global_step/sec: 0.56485
I0116 18:30:07.067323 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.56485
INFO:tensorflow:loss = 0.7927165, step = 213 (177.039 sec)
I0116 18:30:07.068562 140116968068992 basic_session_run_hooks.py:260] loss = 0.7927165, step = 213 (177.039 sec)
INFO:tensorflow:box_loss = 0.005631296, cls_loss = 0.41645637, det_loss = 0.6980212, step = 213 (177.039 sec)
I0116 18:30:07.068767 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.005631296, cls_loss = 0.41645637, det_loss = 0.6980212, step = 213 (177.039 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 226...
I0116 18:30:24.110415 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 226...
INFO:tensorflow:Saving checkpoints for 226 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:30:24.110693 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 226 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 226...
I0116 18:30:28.892490 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 226...
INFO:tensorflow:Loss for final step: 0.71399605.
I0116 18:30:29.572646 140116968068992 estimator.py:350] Loss for final step: 0.71399605.
INFO:tensorflow:Calling model_fn.
I0116 18:30:30.049693 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:30:30.052821 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:30:30.441685 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:30:30.442696 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:30:30.443634 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:30:30.444494 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:30:30.445422 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:30:30.446336 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:30:30.447240 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:30:30.448231 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:30:30.449557 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:30:30.450454 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:30:30.451350 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:30:30.452224 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:30:30.453660 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:30:30.454611 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:30:30.455734 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:30:30.456845 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:30:30.458844 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:30:30.459765 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:30:30.460715 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:30:30.461692 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:30:30.462548 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:30:30.463417 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:30:30.464467 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:30:30.465389 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:30:30.466952 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:30:30.467842 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:30:30.468748 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:30:30.469641 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:30:30.470558 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:30:30.471524 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:30:30.472552 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:30:30.473491 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:30:30.474798 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:30:30.475699 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:30:30.476685 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:30:30.477769 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:30:30.478812 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:30:30.479701 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:30:30.480689 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:30:30.481589 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:30:30.566701 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:30:30.566939 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:30:30.567344 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:30:30.590705 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:30:30.613992 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:30:30.635695 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:30:30.635985 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:30:30.636360 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:30:30.660109 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:30:30.683473 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:30:30.709145 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:30:30.709615 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:30:30.710282 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:30:30.735364 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:30:30.759173 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:30:30.782377 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:30:30.804417 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:30:30.804720 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:30:30.805111 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:30:30.827685 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:30:30.851744 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:30:30.875099 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:30:30.896809 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:30:30.897117 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:30:30.897511 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:30:30.920003 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:30:30.943353 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:30:30.966705 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:30:30.988867 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:30:30.989251 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:30:30.989621 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:30:31.014612 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:30:31.038780 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:30:31.062706 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:30:31.085505 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:30:31.085893 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:30:31.086295 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:30:31.111903 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:30:31.135854 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:30:31.159978 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:30:31.182051 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:30:31.182389 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:30:31.182783 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:30:31.209073 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:30:31.235526 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:30:31.261885 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:30:31.285293 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:30:31.285725 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:30:31.286146 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:30:31.310433 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:30:31.334128 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:30:31.358408 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:30:31.380345 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:30:31.380646 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:30:31.381044 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:30:31.403912 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:30:31.427587 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:30:31.456444 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:30:31.479567 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:30:31.479906 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:30:31.480330 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:30:31.514041 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:30:31.544248 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:30:31.582341 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:30:31.610693 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:30:31.611048 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:30:31.611514 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:30:31.635829 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:30:31.660216 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:30:31.685030 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:30:31.707147 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:30:31.707479 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:30:31.707837 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:30:31.730509 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:30:31.754822 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:30:31.777960 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:30:31.799958 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:30:31.800285 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:30:31.800684 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:30:31.826050 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:30:31.851117 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:30:31.877844 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:30:31.900211 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:30:31.900504 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:30:31.900879 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:30:31.923680 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:30:31.946767 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:30:31.970451 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:30:31.992586 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:30:31.992886 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:30:31.993270 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:30:32.019114 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:30:32.044045 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:30:32.070170 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:30:32.093320 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:30:32.093718 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:30:32.094105 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:30:32.118652 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:30:32.142532 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:30:32.167529 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:30:32.189966 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:30:32.190325 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:30:32.190731 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:30:32.219001 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:30:32.248350 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:30:32.275039 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:30:32.298285 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:30:32.298623 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:30:32.299027 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:30:32.329553 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:30:32.357782 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:30:32.382717 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:30:32.405096 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:30:32.405553 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:30:32.406031 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:30:32.434654 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:30:32.467847 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:30:32.493237 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:30:32.515861 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:30:32.516220 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:30:32.516609 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:30:32.544395 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:30:32.572272 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:30:32.599842 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:30:32.627418 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:30:32.627780 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:30:32.628214 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:30:32.659833 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:30:32.694252 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:30:32.720415 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:30:32.742446 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:30:32.742769 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:30:32.743196 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:30:32.771347 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:30:32.799770 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:30:32.825316 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:30:32.847952 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:30:36.434513 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:30:36.790542 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:30:37.403356 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:30:37.449758 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:30:39.054670 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:30:39Z
I0116 18:30:39.073731 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:30:39Z
INFO:tensorflow:Graph was finalized.
I0116 18:30:39.762160 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:30:39.762586: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:30:39.762787: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:30:39.763293: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:30:39.763353: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:30:39.763415: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:30:39.763442: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:30:39.763460: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:30:39.763479: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:30:39.763496: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:30:39.763517: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:30:39.763538: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:30:39.763623: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:30:39.764051: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:30:39.764476: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:30:39.764530: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:30:39.764561: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:30:39.764572: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:30:39.764674: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:30:39.765088: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:30:39.765503: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-226
I0116 18:30:39.765691 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-226
INFO:tensorflow:Running local_init_op.
I0116 18:30:41.473132 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:30:41.557068 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:30:47.662730 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:30:48.459899 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:30:49.264780 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:30:50.475896 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:30:51.796329 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:30:53.370742 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:30:54.684461 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:30:56.328701 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:30:57.756254 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:30:59.405664 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:31:00.921611 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:31:02.311883 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:31:04.199055 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:31:06.143891 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 38.69775s
I0116 18:31:17.771669 140116968068992 evaluation.py:273] Inference Time : 38.69775s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:31:17
I0116 18:31:17.771923 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:31:17
INFO:tensorflow:Saving dict for global step 226: AP = 0.07265359, AP50 = 0.08886138, AP75 = 0.08162434, AP_/car = 0.100606635, AP_/person = 0.04470054, APl = 0.15048471, APm = 0.0, APs = 0.0, ARl = 0.15468904, ARm = 0.0, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.07083665, ARs = 0.0, box_loss = 0.0042865444, cls_loss = 0.35482448, global_step = 226, loss = 0.66384524
I0116 18:31:17.772100 140116968068992 estimator.py:2066] Saving dict for global step 226: AP = 0.07265359, AP50 = 0.08886138, AP75 = 0.08162434, AP_/car = 0.100606635, AP_/person = 0.04470054, APl = 0.15048471, APm = 0.0, APs = 0.0, ARl = 0.15468904, ARm = 0.0, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.07083665, ARs = 0.0, box_loss = 0.0042865444, cls_loss = 0.35482448, global_step = 226, loss = 0.66384524
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 226: ./eagleview/checkpoints/finetuning/model.ckpt-226
I0116 18:31:17.772644 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 226: ./eagleview/checkpoints/finetuning/model.ckpt-226
I0116 18:31:17.774774 140116968068992 utils.py:455] mv ./eagleview/checkpoints/finetuning/archive to ./eagleview/checkpoints/finetuning/backup
INFO:tensorflow:./eagleview/checkpoints/finetuning/archive/model.ckpt-226 is not in all_model_checkpoint_paths. Manually adding it.
I0116 18:31:17.851572 140116968068992 checkpoint_management.py:102] ./eagleview/checkpoints/finetuning/archive/model.ckpt-226 is not in all_model_checkpoint_paths. Manually adding it.
I0116 18:31:17.852288 140116968068992 utils.py:474] Copying checkpoint ./eagleview/checkpoints/finetuning/model.ckpt-226 to ./eagleview/checkpoints/finetuning/archive
I0116 18:31:18.004080 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:31:18.412846 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:31:18.415719 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:31:18.792045 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:31:18.793004 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:31:18.793941 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:31:18.794898 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:31:18.795802 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:31:18.796753 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:31:18.797728 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:31:18.798948 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:31:18.800381 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:31:18.801274 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:31:18.802105 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:31:18.803024 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:31:18.803884 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:31:18.804741 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:31:18.805681 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:31:18.806595 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:31:18.808012 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:31:18.808885 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:31:18.809699 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:31:18.810503 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:31:18.811315 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:31:18.812205 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:31:18.813058 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:31:18.814018 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:31:18.815412 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:31:18.816297 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:31:18.817132 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:31:18.817979 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:31:18.818954 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:31:18.819970 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:31:18.820870 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:31:18.821800 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:31:18.823096 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:31:18.823945 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:31:18.824798 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:31:18.825967 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:31:18.827524 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:31:18.828613 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:31:18.829579 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:31:18.830455 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:31:18.923279 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:31:18.923487 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:31:18.923872 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:31:18.953723 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:31:18.976637 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:31:19.008730 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:31:19.009049 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:31:19.009443 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:31:19.039828 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:31:19.063175 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:31:19.098359 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:31:19.098749 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:31:19.099127 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:31:19.127947 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:31:19.159076 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:31:19.188335 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:31:19.217717 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:31:19.218025 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:31:19.218435 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:31:19.250397 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:31:19.281389 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:31:19.309390 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:31:19.350586 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:31:19.350977 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:31:19.351422 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:31:19.384121 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:31:19.419493 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:31:19.448174 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:31:19.488041 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:31:19.488428 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:31:19.488814 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:31:19.521333 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:31:19.551379 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:31:19.575654 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:31:19.604391 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:31:19.604691 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:31:19.605097 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:31:19.635486 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:31:19.666731 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:31:19.691224 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:31:19.726688 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:31:19.727110 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:31:19.727504 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:31:19.756565 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:31:19.786294 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:31:19.812268 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:31:19.850012 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:31:19.850434 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:31:19.850837 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:31:19.883625 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:31:19.915407 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:31:19.939547 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:31:19.967943 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:31:19.968266 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:31:19.968676 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:31:19.998712 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:31:20.031693 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:31:20.055866 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:31:20.091558 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:31:20.092011 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:31:20.092472 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:31:20.122379 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:31:20.153242 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:31:20.177490 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:31:20.219663 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:31:20.219994 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:31:20.220402 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:31:20.250643 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:31:20.281529 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:31:20.306359 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:31:20.350376 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:31:20.350737 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:31:20.351193 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:31:20.386212 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:31:20.419149 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:31:20.442976 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:31:20.471842 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:31:20.472164 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:31:20.472577 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:31:20.503167 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:31:20.533973 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:31:20.558058 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:31:20.593761 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:31:20.594078 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:31:20.594447 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:31:20.626326 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:31:20.657504 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:31:20.681491 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:31:20.717261 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:31:20.717589 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:31:20.718029 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:31:20.749427 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:31:20.783142 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:31:20.807690 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:31:20.843623 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:31:20.843999 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:31:20.844401 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:31:20.873797 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:31:20.904758 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:31:20.931442 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:31:20.960021 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:31:20.960360 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:31:20.960742 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:31:20.994699 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:31:21.030747 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:31:21.055613 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:31:21.090086 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:31:21.090403 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:31:21.090764 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:31:21.125208 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:31:21.160351 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:31:21.185042 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:31:21.229637 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:31:21.230033 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:31:21.230493 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:31:21.271953 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:31:21.310663 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:31:21.337818 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:31:21.373995 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:31:21.374350 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:31:21.374739 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:31:21.408870 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:31:21.443857 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:31:21.469303 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:31:21.504614 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:31:21.504961 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:31:21.505394 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:31:21.546257 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:31:21.586644 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:31:21.612542 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:31:21.640478 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:31:21.640794 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:31:21.641201 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:31:21.676738 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:31:21.714644 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:31:21.741023 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:31:21.775276 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:31:25.934124 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:31:26.236882 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:31:26.240435 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:31:26.243447 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:31:26.246298 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:31:26.249301 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:31:26.252348 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:31:26.256919 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:31:26.278619 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:31:28.237953 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:31:40.550241 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:31:40.550433 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:31:40.556783 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:31:40.556947 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:31:40.557062 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:31:40.557146 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:31:40.557260 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:31:40.563896 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:31:40.564020 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:31:40.566524 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
I0116 18:31:40.567063 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:31:45.199305 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:31:45.200506 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:31:48.243657 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:31:48.244066: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:31:48.244321: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:31:48.244784: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:31:48.244853: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:31:48.244947: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:31:48.244976: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:31:48.244995: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:31:48.245019: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:31:48.245046: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:31:48.245070: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:31:48.245095: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:31:48.245222: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:31:48.245669: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:31:48.246036: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:31:48.246092: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:31:48.246110: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:31:48.246120: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:31:48.246248: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:31:48.246667: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:31:48.247040: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-226
I0116 18:31:48.247713 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-226
INFO:tensorflow:Running local_init_op.
I0116 18:31:53.513348 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:31:53.860292 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 226...
I0116 18:32:10.745478 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 226...
INFO:tensorflow:Saving checkpoints for 226 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:32:10.766457 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 226 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 226...
I0116 18:32:15.215049 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 226...
INFO:tensorflow:loss = 0.6855918, step = 226
I0116 18:32:26.667391 140116968068992 basic_session_run_hooks.py:262] loss = 0.6855918, step = 226
INFO:tensorflow:box_loss = 0.0041027255, cls_loss = 0.38575628, det_loss = 0.59089255, step = 226
I0116 18:32:26.667677 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.0041027255, cls_loss = 0.38575628, det_loss = 0.59089255, step = 226
WARNING:tensorflow:It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 228 vs previous value: 228. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
W0116 18:32:38.393900 140116968068992 basic_session_run_hooks.py:734] It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 228 vs previous value: 228. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
WARNING:tensorflow:It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 231 vs previous value: 231. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
W0116 18:32:41.601397 140116968068992 basic_session_run_hooks.py:734] It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 231 vs previous value: 231. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 326...
I0116 18:35:20.412560 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 326...
INFO:tensorflow:Saving checkpoints for 326 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:35:20.412869 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 326 into ./eagleview/checkpoints/finetuning/model.ckpt.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:970: remove_checkpoint (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file APIs to delete files with this prefix.
W0116 18:35:20.638973 140116968068992 deprecation.py:339] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:970: remove_checkpoint (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
Instructions for updating:
Use standard file APIs to delete files with this prefix.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 326...
I0116 18:35:25.815270 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 326...
INFO:tensorflow:global_step/sec: 0.554956
I0116 18:35:26.861113 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.554956
INFO:tensorflow:loss = 0.7690948, step = 326 (180.195 sec)
I0116 18:35:26.862300 140116968068992 basic_session_run_hooks.py:260] loss = 0.7690948, step = 326 (180.195 sec)
INFO:tensorflow:box_loss = 0.005749873, cls_loss = 0.3868868, det_loss = 0.67438054, step = 326 (180.195 sec)
I0116 18:35:26.862692 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.005749873, cls_loss = 0.3868868, det_loss = 0.67438054, step = 326 (180.195 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 339...
I0116 18:35:45.357988 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 339...
INFO:tensorflow:Saving checkpoints for 339 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:35:45.358255 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 339 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 339...
I0116 18:35:50.452358 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 339...
INFO:tensorflow:Loss for final step: 0.6507015.
I0116 18:35:51.210452 140116968068992 estimator.py:350] Loss for final step: 0.6507015.
INFO:tensorflow:Calling model_fn.
I0116 18:35:51.720675 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:35:51.723678 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:35:52.131577 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:35:52.132754 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:35:52.133879 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:35:52.134812 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:35:52.135740 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:35:52.137133 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:35:52.138140 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:35:52.139343 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:35:52.140890 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:35:52.141927 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:35:52.142978 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:35:52.143925 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:35:52.144954 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:35:52.145878 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:35:52.146818 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:35:52.147773 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:35:52.149252 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:35:52.150176 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:35:52.151146 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:35:52.152067 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:35:52.152972 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:35:52.153903 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:35:52.154818 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:35:52.155769 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:35:52.157159 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:35:52.158075 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:35:52.158984 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:35:52.159884 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:35:52.160747 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:35:52.161650 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:35:52.162594 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:35:52.163461 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:35:52.164767 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:35:52.165621 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:35:52.166521 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:35:52.167423 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:35:52.168373 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:35:52.169306 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:35:52.170206 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:35:52.171172 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:35:52.261570 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:35:52.261842 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:35:52.262266 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:35:52.286531 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:35:52.312010 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:35:52.334634 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:35:52.334999 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:35:52.335442 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:35:52.359165 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:35:52.383675 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:35:52.415572 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:35:52.416216 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:35:52.416751 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:35:52.442271 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:35:52.469233 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:35:52.496469 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:35:52.518637 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:35:52.519016 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:35:52.519490 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:35:52.542474 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:35:52.566923 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:35:52.594837 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:35:52.619612 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:35:52.619997 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:35:52.620434 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:35:52.643174 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:35:52.666874 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:35:52.692307 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:35:52.715784 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:35:52.716198 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:35:52.716609 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:35:52.740031 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:35:52.764314 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:35:52.788734 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:35:52.811398 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:35:52.811750 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:35:52.812153 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:35:52.835294 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:35:52.859477 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:35:52.884095 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:35:52.910932 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:35:52.911329 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:35:52.911845 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:35:52.934974 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:35:52.959046 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:35:52.986118 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:35:53.013593 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:35:53.014086 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:35:53.014541 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:35:53.041229 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:35:53.067346 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:35:53.093052 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:35:53.116537 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:35:53.116897 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:35:53.117337 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:35:53.140909 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:35:53.165986 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:35:53.192637 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:35:53.221562 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:35:53.221950 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:35:53.222445 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:35:53.251030 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:35:53.278846 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:35:53.305073 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:35:53.328769 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:35:53.329132 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:35:53.329535 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:35:53.353155 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:35:53.378561 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:35:53.405068 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:35:53.436693 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:35:53.437044 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:35:53.437499 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:35:53.461679 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:35:53.487297 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:35:53.515083 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:35:53.537304 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:35:53.537699 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:35:53.538127 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:35:53.562457 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:35:53.587094 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:35:53.611416 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:35:53.634045 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:35:53.634424 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:35:53.634865 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:35:53.659736 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:35:53.684571 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:35:53.710379 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:35:53.733079 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:35:53.733444 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:35:53.733852 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:35:53.758105 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:35:53.782930 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:35:53.811345 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:35:53.834543 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:35:53.835006 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:35:53.835501 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:35:53.861712 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:35:53.889352 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:35:53.915602 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:35:53.938899 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:35:53.939307 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:35:53.939750 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:35:53.968760 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:35:53.999028 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:35:54.026413 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:35:54.049986 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:35:54.050463 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:35:54.050936 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:35:54.080213 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:35:54.114244 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:35:54.147680 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:35:54.175882 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:35:54.176325 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:35:54.176844 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:35:54.208752 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:35:54.238999 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:35:54.264707 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:35:54.289929 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:35:54.290412 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:35:54.291021 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:35:54.322077 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:35:54.352631 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:35:54.379730 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:35:54.403576 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:35:54.404115 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:35:54.404783 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:35:54.435137 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:35:54.469472 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:35:54.496745 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:35:54.520233 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:35:54.520610 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:35:54.521056 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:35:54.549584 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:35:54.579235 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:35:54.606439 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:35:54.629132 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:35:58.405525 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:35:58.778640 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:35:59.342970 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:35:59.391676 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:36:01.424825 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:36:01Z
I0116 18:36:01.445009 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:36:01Z
INFO:tensorflow:Graph was finalized.
I0116 18:36:02.180016 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:36:02.180425: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:36:02.180650: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:36:02.181145: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:36:02.181223: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:36:02.183867: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:36:02.183942: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:36:02.183987: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:36:02.184037: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:36:02.184058: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:36:02.184085: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:36:02.184111: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:36:02.184223: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:36:02.184704: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:36:02.185093: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:36:02.185152: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:36:02.185168: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:36:02.185194: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:36:02.185309: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:36:02.185852: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:36:02.186290: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-339
I0116 18:36:02.186471 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-339
INFO:tensorflow:Running local_init_op.
I0116 18:36:04.062605 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:36:04.157015 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:36:10.280265 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:36:11.209331 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:36:12.780279 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:36:14.386223 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:36:15.919019 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:36:17.287333 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:36:18.980387 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:36:20.753994 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:36:22.374602 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:36:23.930895 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:36:25.439956 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:36:27.188071 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:36:28.902863 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:36:30.799361 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 41.30580s
I0116 18:36:42.751004 140116968068992 evaluation.py:273] Inference Time : 41.30580s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:36:42
I0116 18:36:42.751319 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:36:42
INFO:tensorflow:Saving dict for global step 339: AP = 0.07041504, AP50 = 0.08886138, AP75 = 0.0771235, AP_/car = 0.10091762, AP_/person = 0.039912462, APl = 0.13845827, APm = 0.0032615026, APs = 0.0, ARl = 0.14207335, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06913215, ARs = 0.0, box_loss = 0.004252579, cls_loss = 0.34252903, global_step = 339, loss = 0.6498677
I0116 18:36:42.751520 140116968068992 estimator.py:2066] Saving dict for global step 339: AP = 0.07041504, AP50 = 0.08886138, AP75 = 0.0771235, AP_/car = 0.10091762, AP_/person = 0.039912462, APl = 0.13845827, APm = 0.0032615026, APs = 0.0, ARl = 0.14207335, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06913215, ARs = 0.0, box_loss = 0.004252579, cls_loss = 0.34252903, global_step = 339, loss = 0.6498677
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 339: ./eagleview/checkpoints/finetuning/model.ckpt-339
I0116 18:36:42.752121 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 339: ./eagleview/checkpoints/finetuning/model.ckpt-339
I0116 18:36:42.753741 140116968068992 utils.py:439] Ckpt 0.07041504234075546 is worse than 0.072654
I0116 18:36:42.908030 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:36:43.335649 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:36:43.338828 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:36:43.722969 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:36:43.724000 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:36:43.724992 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:36:43.725992 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:36:43.726926 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:36:43.727904 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:36:43.728797 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:36:43.729737 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:36:43.731096 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:36:43.732018 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:36:43.732911 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:36:43.733787 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:36:43.734755 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:36:43.735731 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:36:43.736667 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:36:43.737634 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:36:43.739053 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:36:43.739972 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:36:43.741162 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:36:43.742631 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:36:43.743504 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:36:43.744500 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:36:43.745434 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:36:43.746377 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:36:43.747889 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:36:43.748758 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:36:43.749660 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:36:43.750543 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:36:43.751442 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:36:43.752438 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:36:43.753431 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:36:43.754334 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:36:43.755647 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:36:43.756493 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:36:43.757374 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:36:43.758312 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:36:43.759339 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:36:43.760174 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:36:43.761075 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:36:43.762022 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:36:43.857537 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:36:43.857807 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:36:43.858203 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:36:43.888661 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:36:43.912038 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:36:43.941416 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:36:43.941765 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:36:43.942174 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:36:43.973561 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:36:44.000678 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:36:44.042411 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:36:44.042827 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:36:44.043300 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:36:44.077652 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:36:44.114093 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:36:44.139130 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:36:44.168694 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:36:44.169055 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:36:44.169530 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:36:44.200845 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:36:44.232350 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:36:44.265388 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:36:44.301966 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:36:44.302398 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:36:44.302854 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:36:44.337436 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:36:44.369105 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:36:44.393363 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:36:44.428933 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:36:44.429375 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:36:44.429798 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:36:44.462664 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:36:44.493136 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:36:44.516810 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:36:44.545971 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:36:44.546301 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:36:44.546698 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:36:44.576128 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:36:44.606848 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:36:44.634044 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:36:44.670467 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:36:44.670778 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:36:44.671193 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:36:44.700790 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:36:44.732818 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:36:44.756946 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:36:44.792859 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:36:44.793274 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:36:44.793715 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:36:44.824497 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:36:44.857707 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:36:44.886455 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:36:44.919938 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:36:44.920325 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:36:44.920784 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:36:44.957646 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:36:44.989729 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:36:45.013689 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:36:45.050496 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:36:45.050846 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:36:45.051305 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:36:45.081916 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:36:45.113175 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:36:45.137135 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:36:45.173450 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:36:45.173789 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:36:45.174192 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:36:45.207102 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:36:45.243594 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:36:45.278645 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:36:45.316221 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:36:45.316648 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:36:45.317104 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:36:45.349947 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:36:45.381401 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:36:45.405405 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:36:45.434295 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:36:45.434620 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:36:45.435014 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:36:45.465632 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:36:45.497067 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:36:45.521169 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:36:45.560574 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:36:45.560936 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:36:45.561383 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:36:45.591695 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:36:45.622394 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:36:45.647347 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:36:45.682840 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:36:45.683137 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:36:45.683532 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:36:45.713286 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:36:45.745095 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:36:45.769167 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:36:45.805091 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:36:45.805490 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:36:45.805873 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:36:45.840237 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:36:45.875057 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:36:45.902119 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:36:45.933731 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:36:45.934056 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:36:45.934469 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:36:45.969246 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:36:46.003793 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:36:46.028754 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:36:46.065454 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:36:46.065862 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:36:46.066343 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:36:46.101138 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:36:46.139600 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:36:46.164826 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:36:46.200725 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:36:46.201095 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:36:46.201525 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:36:46.237593 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:36:46.273845 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:36:46.306531 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:36:46.344493 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:36:46.344879 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:36:46.345345 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:36:46.381654 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:36:46.417134 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:36:46.445892 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:36:46.485933 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:36:46.486339 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:36:46.486828 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:36:46.525628 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:36:46.565969 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:36:46.591383 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:36:46.620244 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:36:46.620622 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:36:46.621015 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:36:46.659883 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:36:46.695955 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:36:46.721447 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:36:46.759728 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:36:50.948568 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:36:51.253502 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:36:51.256725 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:36:51.259708 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:36:51.262637 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:36:51.265619 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:36:51.268663 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:36:51.273485 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:36:51.293949 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:36:53.298686 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:37:05.008205 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:37:05.008410 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:37:05.015888 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:37:05.016065 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:37:05.016175 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:37:05.016312 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:37:05.016420 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:37:05.023307 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:37:05.023441 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:37:05.027347 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:37:05.029276 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:37:11.108662 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:37:11.109887 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:37:14.277143 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:37:14.277586: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:37:14.277835: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:37:14.278423: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:37:14.278487: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:37:14.278545: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:37:14.278576: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:37:14.278594: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:37:14.278612: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:37:14.278629: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:37:14.278647: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:37:14.278667: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:37:14.278756: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:37:14.279258: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:37:14.279665: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:37:14.279743: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:37:14.279760: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:37:14.279771: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:37:14.279908: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:37:14.280401: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:37:14.280816: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-339
I0116 18:37:14.281548 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-339
INFO:tensorflow:Running local_init_op.
I0116 18:37:19.923676 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:37:20.290273 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 339...
I0116 18:37:37.354630 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 339...
INFO:tensorflow:Saving checkpoints for 339 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:37:37.355041 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 339 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 339...
I0116 18:37:42.014436 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 339...
INFO:tensorflow:loss = 0.60611665, step = 339
I0116 18:37:53.825532 140116968068992 basic_session_run_hooks.py:262] loss = 0.60611665, step = 339
INFO:tensorflow:box_loss = 0.0038219015, cls_loss = 0.3203071, det_loss = 0.5114022, step = 339
I0116 18:37:53.825829 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.0038219015, cls_loss = 0.3203071, det_loss = 0.5114022, step = 339
WARNING:tensorflow:It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 341 vs previous value: 341. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
W0116 18:38:06.300908 140116968068992 basic_session_run_hooks.py:734] It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 341 vs previous value: 341. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 439...
I0116 18:40:48.203616 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 439...
INFO:tensorflow:Saving checkpoints for 439 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:40:48.204083 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 439 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 439...
I0116 18:40:53.432792 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 439...
INFO:tensorflow:global_step/sec: 0.553586
I0116 18:40:54.465066 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.553586
INFO:tensorflow:loss = 0.80390483, step = 439 (180.641 sec)
I0116 18:40:54.466384 140116968068992 basic_session_run_hooks.py:260] loss = 0.80390483, step = 439 (180.641 sec)
INFO:tensorflow:box_loss = 0.006126324, cls_loss = 0.4028644, det_loss = 0.7091806, step = 439 (180.641 sec)
I0116 18:40:54.466606 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.006126324, cls_loss = 0.4028644, det_loss = 0.7091806, step = 439 (180.641 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 453...
I0116 18:41:13.888003 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 453...
INFO:tensorflow:Saving checkpoints for 453 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:41:13.888294 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 453 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 453...
I0116 18:41:18.925111 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 453...
INFO:tensorflow:Loss for final step: 0.6960248.
I0116 18:41:19.695398 140116968068992 estimator.py:350] Loss for final step: 0.6960248.
INFO:tensorflow:Calling model_fn.
I0116 18:41:20.208106 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:41:20.211009 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:41:20.600841 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:41:20.601808 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:41:20.602771 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:41:20.603653 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:41:20.604516 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:41:20.605407 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:41:20.606274 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:41:20.607208 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:41:20.608592 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:41:20.609436 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:41:20.610573 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:41:20.611965 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:41:20.613396 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:41:20.614731 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:41:20.616147 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:41:20.617641 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:41:20.619790 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:41:20.621063 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:41:20.622521 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:41:20.623927 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:41:20.624862 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:41:20.625739 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:41:20.626650 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:41:20.627530 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:41:20.629047 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:41:20.630011 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:41:20.630926 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:41:20.631820 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:41:20.632691 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:41:20.633640 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:41:20.635288 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:41:20.636228 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:41:20.637653 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:41:20.638611 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:41:20.639544 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:41:20.640505 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:41:20.641510 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:41:20.642492 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:41:20.643418 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:41:20.644399 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:41:20.728811 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:41:20.729099 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:41:20.729520 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:41:20.752818 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:41:20.775824 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:41:20.798301 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:41:20.798621 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:41:20.799029 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:41:20.822864 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:41:20.845891 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:41:20.868135 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:41:20.868564 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:41:20.868989 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:41:20.893768 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:41:20.918255 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:41:20.942126 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:41:20.965331 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:41:20.965627 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:41:20.966003 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:41:20.988055 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:41:21.011329 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:41:21.035413 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:41:21.057919 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:41:21.058266 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:41:21.058669 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:41:21.081258 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:41:21.104911 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:41:21.128002 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:41:21.150327 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:41:21.150693 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:41:21.151100 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:41:21.174002 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:41:21.201871 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:41:21.228830 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:41:21.255098 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:41:21.255477 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:41:21.255919 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:41:21.281928 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:41:21.308032 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:41:21.332440 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:41:21.356017 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:41:21.356387 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:41:21.356804 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:41:21.381173 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:41:21.409395 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:41:21.435992 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:41:21.460808 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:41:21.461243 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:41:21.461654 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:41:21.483855 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:41:21.509548 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:41:21.532982 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:41:21.554730 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:41:21.555042 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:41:21.555462 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:41:21.579133 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:41:21.603012 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:41:21.634453 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:41:21.658667 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:41:21.659052 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:41:21.659574 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:41:21.683277 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:41:21.706983 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:41:21.731067 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:41:21.753458 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:41:21.753794 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:41:21.754203 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:41:21.776710 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:41:21.804660 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:41:21.832899 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:41:21.858243 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:41:21.858632 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:41:21.859091 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:41:21.883473 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:41:21.907229 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:41:21.930277 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:41:21.951529 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:41:21.951897 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:41:21.952476 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:41:21.976743 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:41:22.003481 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:41:22.028607 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:41:22.052404 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:41:22.052788 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:41:22.053245 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:41:22.077057 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:41:22.104348 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:41:22.128321 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:41:22.151497 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:41:22.151868 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:41:22.152393 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:41:22.176917 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:41:22.201705 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:41:22.225853 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:41:22.248873 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:41:22.249291 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:41:22.249698 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:41:22.274899 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:41:22.301865 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:41:22.332038 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:41:22.356487 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:41:22.356860 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:41:22.357308 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:41:22.385821 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:41:22.414346 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:41:22.446551 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:41:22.474218 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:41:22.474577 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:41:22.474989 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:41:22.504392 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:41:22.533172 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:41:22.559073 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:41:22.583131 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:41:22.583538 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:41:22.583933 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:41:22.618088 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:41:22.653661 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:41:22.680107 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:41:22.703801 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:41:22.704218 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:41:22.704635 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:41:22.733145 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:41:22.762271 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:41:22.789156 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:41:22.816597 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:41:22.817013 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:41:22.817500 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:41:22.849496 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:41:22.882155 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:41:22.909677 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:41:22.931925 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:41:22.932298 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:41:22.932708 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:41:22.964169 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:41:22.993334 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:41:23.020123 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:41:23.043153 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:41:26.691750 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:41:27.049153 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:41:27.742425 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:41:27.789819 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:41:28.610899 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:41:28Z
I0116 18:41:28.629686 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:41:28Z
INFO:tensorflow:Graph was finalized.
I0116 18:41:29.312081 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:41:29.312531: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:41:29.312751: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:41:29.313259: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:41:29.313329: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:41:29.313395: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:41:29.313422: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:41:29.313441: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:41:29.313463: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:41:29.313484: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:41:29.313500: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:41:29.313523: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:41:29.313622: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:41:29.314054: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:41:29.314434: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:41:29.314487: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:41:29.314503: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:41:29.314514: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:41:29.314618: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:41:29.315033: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:41:29.315571: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-453
I0116 18:41:29.315832 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-453
INFO:tensorflow:Running local_init_op.
I0116 18:41:31.071323 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:41:31.163420 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:41:37.567658 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:41:38.427078 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:41:39.292765 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:41:40.715679 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:41:42.201742 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:41:43.720968 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:41:45.240690 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:41:47.104838 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:41:48.321718 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:41:49.655104 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:41:51.120937 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:41:52.983545 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:41:54.547585 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:41:56.444434 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 39.37201s
I0116 18:42:08.001883 140116968068992 evaluation.py:273] Inference Time : 39.37201s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:42:08
I0116 18:42:08.002141 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:42:08
INFO:tensorflow:Saving dict for global step 453: AP = 0.071614265, AP50 = 0.08861386, AP75 = 0.079826735, AP_/car = 0.10267731, AP_/person = 0.040551215, APl = 0.13714422, APm = 0.004014157, APs = 0.0, ARl = 0.14090644, ARm = 0.003805899, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.069667034, ARs = 0.0, box_loss = 0.0042526354, cls_loss = 0.33513376, global_step = 453, loss = 0.6424847
I0116 18:42:08.002372 140116968068992 estimator.py:2066] Saving dict for global step 453: AP = 0.071614265, AP50 = 0.08861386, AP75 = 0.079826735, AP_/car = 0.10267731, AP_/person = 0.040551215, APl = 0.13714422, APm = 0.004014157, APs = 0.0, ARl = 0.14090644, ARm = 0.003805899, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.069667034, ARs = 0.0, box_loss = 0.0042526354, cls_loss = 0.33513376, global_step = 453, loss = 0.6424847
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 453: ./eagleview/checkpoints/finetuning/model.ckpt-453
I0116 18:42:08.003006 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 453: ./eagleview/checkpoints/finetuning/model.ckpt-453
I0116 18:42:08.004566 140116968068992 utils.py:439] Ckpt 0.07161426544189453 is worse than 0.072654
I0116 18:42:08.154687 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:42:08.574414 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:42:08.577368 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:42:08.977220 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:42:08.978152 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:42:08.979012 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:42:08.979941 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:42:08.980945 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:42:08.981822 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:42:08.982713 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:42:08.983632 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:42:08.984992 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:42:08.985978 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:42:08.986936 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:42:08.987904 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:42:08.988769 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:42:08.989633 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:42:08.990517 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:42:08.991379 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:42:08.992800 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:42:08.993653 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:42:08.994619 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:42:08.995506 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:42:08.996411 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:42:08.997267 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:42:08.998132 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:42:08.998968 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:42:09.000389 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:42:09.001268 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:42:09.002197 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:42:09.003201 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:42:09.004140 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:42:09.005001 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:42:09.005902 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:42:09.006835 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:42:09.008157 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:42:09.009069 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:42:09.009914 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:42:09.010827 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:42:09.011719 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:42:09.012629 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:42:09.013555 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:42:09.015276 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:42:09.114904 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:42:09.115198 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:42:09.115709 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:42:09.147105 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:42:09.171773 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:42:09.201480 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:42:09.201789 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:42:09.202210 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:42:09.237224 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:42:09.262079 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:42:09.297945 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:42:09.298379 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:42:09.298794 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:42:09.329234 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:42:09.360408 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:42:09.385621 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:42:09.418097 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:42:09.418391 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:42:09.418751 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:42:09.447368 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:42:09.478131 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:42:09.502884 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:42:09.545922 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:42:09.546239 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:42:09.546734 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:42:09.581149 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:42:09.613688 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:42:09.638509 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:42:09.674486 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:42:09.674857 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:42:09.675266 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:42:09.703922 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:42:09.734261 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:42:09.757971 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:42:09.786671 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:42:09.787004 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:42:09.787433 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:42:09.816613 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:42:09.849406 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:42:09.873438 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:42:09.908961 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:42:09.909301 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:42:09.909682 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:42:09.939930 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:42:09.969904 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:42:09.993906 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:42:10.029581 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:42:10.030021 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:42:10.030474 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:42:10.061661 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:42:10.093277 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:42:10.117309 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:42:10.153808 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:42:10.154166 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:42:10.154638 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:42:10.190085 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:42:10.223428 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:42:10.251116 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:42:10.297080 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:42:10.297549 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:42:10.298161 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:42:10.332303 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:42:10.365130 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:42:10.390307 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:42:10.434476 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:42:10.434848 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:42:10.435265 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:42:10.465215 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:42:10.495885 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:42:10.520237 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:42:10.556412 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:42:10.556733 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:42:10.557123 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:42:10.588012 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:42:10.618347 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:42:10.648262 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:42:10.680778 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:42:10.681092 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:42:10.681524 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:42:10.716773 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:42:10.748603 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:42:10.773414 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:42:10.809437 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:42:10.809787 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:42:10.810192 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:42:10.840735 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:42:10.872680 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:42:10.896857 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:42:10.934868 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:42:10.935240 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:42:10.935685 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:42:10.966469 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:42:10.997130 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:42:11.021167 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:42:11.056776 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:42:11.057153 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:42:11.057541 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:42:11.087709 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:42:11.119726 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:42:11.145995 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:42:11.175228 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:42:11.175571 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:42:11.175952 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:42:11.210959 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:42:11.253040 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:42:11.281924 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:42:11.321394 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:42:11.321763 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:42:11.322154 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:42:11.358820 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:42:11.395435 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:42:11.424512 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:42:11.462615 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:42:11.462971 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:42:11.463420 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:42:11.498592 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:42:11.539353 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:42:11.565675 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:42:11.601375 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:42:11.601755 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:42:11.602210 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:42:11.637773 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:42:11.674355 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:42:11.700028 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:42:11.740865 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:42:11.741286 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:42:11.741733 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:42:11.781910 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:42:11.823164 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:42:11.850136 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:42:11.878537 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:42:11.878849 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:42:11.879292 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:42:11.915112 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:42:11.955033 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:42:11.984143 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:42:12.022152 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:42:16.150222 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:42:16.450796 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:42:16.455068 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:42:16.459290 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:42:16.462885 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:42:16.465941 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:42:16.468720 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:42:16.472992 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:42:16.495883 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:42:18.482669 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:42:31.858521 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:42:31.858692 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:42:31.865548 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:42:31.865709 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:42:31.865813 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:42:31.865903 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:42:31.865994 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:42:31.872674 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:42:31.872790 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:42:31.874044 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:42:31.876652 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:42:36.516663 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:42:36.517857 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:42:39.591954 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:42:39.592424: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:42:39.592627: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:42:39.593144: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:42:39.593218: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:42:39.593281: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:42:39.593325: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:42:39.593358: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:42:39.593406: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:42:39.593428: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:42:39.593451: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:42:39.593474: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:42:39.593576: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:42:39.594044: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:42:39.594507: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:42:39.594578: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:42:39.594597: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:42:39.594609: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:42:39.594731: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:42:39.595145: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:42:39.595582: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-453
I0116 18:42:39.596320 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-453
INFO:tensorflow:Running local_init_op.
I0116 18:42:45.031899 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:42:45.392796 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 453...
I0116 18:43:02.241642 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 453...
INFO:tensorflow:Saving checkpoints for 453 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:43:02.241942 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 453 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 453...
I0116 18:43:06.778774 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 453...
INFO:tensorflow:loss = 0.5975234, step = 453
I0116 18:43:18.304228 140116968068992 basic_session_run_hooks.py:262] loss = 0.5975234, step = 453
INFO:tensorflow:box_loss = 0.0039447504, cls_loss = 0.30556303, det_loss = 0.5028006, step = 453
I0116 18:43:18.304754 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.0039447504, cls_loss = 0.30556303, det_loss = 0.5028006, step = 453
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 553...
I0116 18:46:11.568217 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 553...
INFO:tensorflow:Saving checkpoints for 553 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:46:11.568483 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 553 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 553...
I0116 18:46:16.930377 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 553...
INFO:tensorflow:global_step/sec: 0.556588
I0116 18:46:17.969769 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.556588
INFO:tensorflow:loss = 0.74597687, step = 553 (179.667 sec)
I0116 18:46:17.970921 140116968068992 basic_session_run_hooks.py:260] loss = 0.74597687, step = 553 (179.667 sec)
INFO:tensorflow:box_loss = 0.0061597005, cls_loss = 0.34326246, det_loss = 0.6512475, step = 553 (179.666 sec)
I0116 18:46:17.971121 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.0061597005, cls_loss = 0.34326246, det_loss = 0.6512475, step = 553 (179.666 sec)
WARNING:tensorflow:It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 557 vs previous value: 557. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
W0116 18:46:22.077327 140116968068992 basic_session_run_hooks.py:734] It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 557 vs previous value: 557. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 566...
I0116 18:46:34.456691 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 566...
INFO:tensorflow:Saving checkpoints for 566 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:46:34.456965 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 566 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 566...
I0116 18:46:39.541815 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 566...
INFO:tensorflow:Loss for final step: 0.69325763.
I0116 18:46:40.290399 140116968068992 estimator.py:350] Loss for final step: 0.69325763.
INFO:tensorflow:Calling model_fn.
I0116 18:46:40.800972 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:46:40.804122 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:46:41.195059 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:46:41.196774 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:46:41.197948 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:46:41.198988 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:46:41.199920 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:46:41.200857 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:46:41.201890 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:46:41.202945 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:46:41.204349 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:46:41.205273 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:46:41.206175 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:46:41.207087 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:46:41.208048 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:46:41.208984 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:46:41.209908 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:46:41.210841 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:46:41.212237 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:46:41.213159 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:46:41.214152 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:46:41.215017 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:46:41.215979 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:46:41.216995 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:46:41.218052 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:46:41.219174 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:46:41.220719 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:46:41.221673 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:46:41.222622 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:46:41.223554 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:46:41.224428 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:46:41.225325 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:46:41.226271 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:46:41.227165 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:46:41.228565 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:46:41.229536 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:46:41.230711 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:46:41.231733 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:46:41.232856 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:46:41.233830 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:46:41.234892 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:46:41.235945 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:46:41.323952 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:46:41.324289 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:46:41.324708 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:46:41.348847 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:46:41.373806 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:46:41.395523 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:46:41.395852 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:46:41.396337 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:46:41.420458 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:46:41.445285 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:46:41.470777 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:46:41.471295 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:46:41.471813 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:46:41.500024 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:46:41.531702 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:46:41.558355 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:46:41.581216 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:46:41.581519 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:46:41.581968 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:46:41.604528 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:46:41.628110 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:46:41.651635 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:46:41.674290 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:46:41.674653 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:46:41.675077 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:46:41.697702 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:46:41.728107 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:46:41.756015 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:46:41.783747 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:46:41.784302 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:46:41.784729 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:46:41.807961 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:46:41.833873 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:46:41.859751 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:46:41.882071 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:46:41.882447 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:46:41.882861 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:46:41.906611 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:46:41.931672 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:46:41.955691 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:46:41.979002 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:46:41.979376 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:46:41.979819 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:46:42.003134 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:46:42.028460 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:46:42.053118 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:46:42.078759 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:46:42.079314 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:46:42.079826 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:46:42.106832 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:46:42.134294 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:46:42.162880 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:46:42.189497 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:46:42.189873 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:46:42.190320 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:46:42.213885 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:46:42.238500 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:46:42.263746 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:46:42.286488 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:46:42.286802 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:46:42.287212 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:46:42.329735 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:46:42.359385 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:46:42.387345 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:46:42.411334 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:46:42.411711 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:46:42.412153 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:46:42.437563 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:46:42.462412 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:46:42.487331 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:46:42.512919 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:46:42.513301 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:46:42.513761 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:46:42.544001 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:46:42.569267 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:46:42.593834 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:46:42.615777 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:46:42.616123 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:46:42.616551 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:46:42.639792 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:46:42.664097 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:46:42.692814 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:46:42.715234 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:46:42.715538 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:46:42.715917 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:46:42.739505 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:46:42.763344 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:46:42.788917 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:46:42.813504 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:46:42.813857 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:46:42.814278 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:46:42.841637 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:46:42.868487 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:46:42.895576 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:46:42.917761 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:46:42.918211 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:46:42.918642 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:46:42.942360 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:46:42.966196 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:46:42.992980 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:46:43.015091 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:46:43.015429 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:46:43.015823 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:46:43.044242 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:46:43.072499 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:46:43.098540 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:46:43.120846 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:46:43.121216 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:46:43.121594 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:46:43.149680 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:46:43.179096 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:46:43.206062 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:46:43.229011 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:46:43.229382 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:46:43.229777 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:46:43.258611 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:46:43.290517 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:46:43.316226 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:46:43.340071 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:46:43.340441 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:46:43.340921 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:46:43.374409 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:46:43.419967 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:46:43.453866 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:46:43.483218 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:46:43.483806 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:46:43.484312 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:46:43.516322 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:46:43.550119 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:46:43.577104 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:46:43.601503 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:46:43.601828 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:46:43.602252 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:46:43.630032 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:46:43.660465 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:46:43.688096 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:46:43.712500 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:46:47.317414 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:46:47.687237 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:46:48.230574 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:46:48.276532 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:46:49.091064 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:46:49Z
I0116 18:46:49.109832 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:46:49Z
INFO:tensorflow:Graph was finalized.
I0116 18:46:49.818609 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:46:49.819070: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:46:49.819315: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:46:49.819855: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:46:49.819930: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:46:49.819994: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:46:49.820038: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:46:49.820057: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:46:49.820081: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:46:49.820105: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:46:49.820128: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:46:49.820152: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:46:49.820269: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:46:49.820722: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:46:49.821142: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:46:49.821212: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:46:49.821235: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:46:49.821246: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:46:49.821361: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:46:49.821812: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:46:49.822251: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-566
I0116 18:46:49.822416 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-566
INFO:tensorflow:Running local_init_op.
I0116 18:46:51.541939 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:46:51.625605 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:46:57.991706 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:46:58.839248 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:46:59.694669 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:47:01.091174 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:47:02.445546 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:47:03.983047 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:47:05.610032 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:47:07.466117 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:47:08.836588 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:47:10.380465 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:47:11.906839 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:47:13.587319 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:47:15.449509 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:47:17.166437 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 39.80103s
I0116 18:47:28.911039 140116968068992 evaluation.py:273] Inference Time : 39.80103s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:47:28
I0116 18:47:28.911321 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:47:28
INFO:tensorflow:Saving dict for global step 566: AP = 0.07066071, AP50 = 0.08861386, AP75 = 0.079826735, AP_/car = 0.10178218, AP_/person = 0.039539237, APl = 0.13603361, APm = 0.0024371669, APs = 0.0, ARl = 0.14251588, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06903384, ARs = 0.0, box_loss = 0.004261899, cls_loss = 0.33323246, global_step = 566, loss = 0.64105254
I0116 18:47:28.911505 140116968068992 estimator.py:2066] Saving dict for global step 566: AP = 0.07066071, AP50 = 0.08861386, AP75 = 0.079826735, AP_/car = 0.10178218, AP_/person = 0.039539237, APl = 0.13603361, APm = 0.0024371669, APs = 0.0, ARl = 0.14251588, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06903384, ARs = 0.0, box_loss = 0.004261899, cls_loss = 0.33323246, global_step = 566, loss = 0.64105254
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 566: ./eagleview/checkpoints/finetuning/model.ckpt-566
I0116 18:47:28.912092 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 566: ./eagleview/checkpoints/finetuning/model.ckpt-566
I0116 18:47:28.913640 140116968068992 utils.py:439] Ckpt 0.07066071033477783 is worse than 0.072654
I0116 18:47:29.063521 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:47:29.491836 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:47:29.494858 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:47:29.899045 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:47:29.900046 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:47:29.900994 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:47:29.901969 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:47:29.902991 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:47:29.903920 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:47:29.904845 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:47:29.905777 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:47:29.907234 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:47:29.908193 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:47:29.909170 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:47:29.910139 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:47:29.911094 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:47:29.912085 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:47:29.913019 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:47:29.913976 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:47:29.915439 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:47:29.916354 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:47:29.917282 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:47:29.918231 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:47:29.919252 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:47:29.920189 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:47:29.921215 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:47:29.922071 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:47:29.923532 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:47:29.924492 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:47:29.925505 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:47:29.926737 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:47:29.927777 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:47:29.928722 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:47:29.929717 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:47:29.930669 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:47:29.932068 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:47:29.933041 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:47:29.933963 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:47:29.934884 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:47:29.935810 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:47:29.936741 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:47:29.937677 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:47:29.938653 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:47:30.036457 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:47:30.036775 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:47:30.037247 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:47:30.068708 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:47:30.093406 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:47:30.123512 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:47:30.123839 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:47:30.124264 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:47:30.157747 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:47:30.186725 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:47:30.224012 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:47:30.224416 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:47:30.224801 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:47:30.255788 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:47:30.287787 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:47:30.311787 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:47:30.346847 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:47:30.347200 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:47:30.347623 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:47:30.378811 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:47:30.410278 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:47:30.434096 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:47:30.471021 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:47:30.471374 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:47:30.471765 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:47:30.505959 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:47:30.536738 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:47:30.561334 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:47:30.598281 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:47:30.598651 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:47:30.599037 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:47:30.629948 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:47:30.665813 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:47:30.690307 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:47:30.720461 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:47:30.720813 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:47:30.721219 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:47:30.750828 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:47:30.782491 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:47:30.809823 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:47:30.849853 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:47:30.850237 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:47:30.850657 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:47:30.881719 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:47:30.913028 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:47:30.937109 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:47:30.974427 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:47:30.974924 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:47:30.975422 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:47:31.006407 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:47:31.038232 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:47:31.063536 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:47:31.097355 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:47:31.097736 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:47:31.098145 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:47:31.132411 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:47:31.165009 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:47:31.188909 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:47:31.224369 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:47:31.224679 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:47:31.225095 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:47:31.255319 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:47:31.286824 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:47:31.309590 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:47:31.349647 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:47:31.349975 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:47:31.350418 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:47:31.382109 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:47:31.416556 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:47:31.441082 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:47:31.475708 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:47:31.476058 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:47:31.476572 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:47:31.506557 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:47:31.538472 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:47:31.563961 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:47:31.597446 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:47:31.597762 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:47:31.598191 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:47:31.630027 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:47:31.661155 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:47:31.685068 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:47:31.720074 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:47:31.720439 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:47:31.720829 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:47:31.750451 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:47:31.783533 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:47:31.811736 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:47:31.849412 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:47:31.849766 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:47:31.850213 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:47:31.883592 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:47:31.917120 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:47:31.942761 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:47:31.982991 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:47:31.983472 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:47:31.983913 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:47:32.018995 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:47:32.052705 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:47:32.079035 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:47:32.115884 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:47:32.116286 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:47:32.116747 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:47:32.160352 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:47:32.205563 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:47:32.238096 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:47:32.286267 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:47:32.286864 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:47:32.287553 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:47:32.329314 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:47:32.384985 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:47:32.418560 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:47:32.457587 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:47:32.458032 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:47:32.458541 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:47:32.496584 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:47:32.533704 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:47:32.560022 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:47:32.596028 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:47:32.596437 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:47:32.596903 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:47:32.633854 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:47:32.670405 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:47:32.700359 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:47:32.735541 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:47:32.735898 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:47:32.736328 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:47:32.772062 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:47:32.808920 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:47:32.835899 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:47:32.867724 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:47:32.868117 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:47:32.868583 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:47:32.907336 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:47:32.943967 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:47:32.969967 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:47:33.007159 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:47:37.201559 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:47:37.505964 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:47:37.509047 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:47:37.512024 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:47:37.515048 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:47:37.517996 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:47:37.521000 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:47:37.525253 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:47:37.544764 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:47:39.543998 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:47:53.073618 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:47:53.073800 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:47:53.080259 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:47:53.080420 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:47:53.080525 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:47:53.080616 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:47:53.080698 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:47:53.087708 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:47:53.087842 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:47:53.090753 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:47:53.093355 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:47:57.774363 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:47:57.775516 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:48:00.894464 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:48:00.894850: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:48:00.895042: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:48:00.895501: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:48:00.895556: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:48:00.895606: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:48:00.895628: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:48:00.895645: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:48:00.895660: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:48:00.895681: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:48:00.895698: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:48:00.895716: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:48:00.895808: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:48:00.896225: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:48:00.896606: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:48:00.896736: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:48:00.896753: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:48:00.896763: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:48:00.896879: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:48:00.897325: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:48:00.897702: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-566
I0116 18:48:00.898434 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-566
INFO:tensorflow:Running local_init_op.
I0116 18:48:06.292703 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:48:06.644556 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 566...
I0116 18:48:23.436318 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 566...
INFO:tensorflow:Saving checkpoints for 566 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:48:23.456976 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 566 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 566...
I0116 18:48:28.010606 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 566...
INFO:tensorflow:loss = 0.6203642, step = 566
I0116 18:48:39.438996 140116968068992 basic_session_run_hooks.py:262] loss = 0.6203642, step = 566
INFO:tensorflow:box_loss = 0.003678256, cls_loss = 0.34172514, det_loss = 0.525638, step = 566
I0116 18:48:39.439577 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.003678256, cls_loss = 0.34172514, det_loss = 0.525638, step = 566
WARNING:tensorflow:It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 571 vs previous value: 571. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
W0116 18:48:55.128616 140116968068992 basic_session_run_hooks.py:734] It seems that global step (tf.train.get_global_step) has not been increased. Current value (could be stable): 571 vs previous value: 571. You could increase the global step by passing tf.train.get_global_step() to Optimizer.apply_gradients or Optimizer.minimize.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 666...
I0116 18:51:38.294292 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 666...
INFO:tensorflow:Saving checkpoints for 666 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:51:38.294576 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 666 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 666...
I0116 18:51:43.632457 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 666...
INFO:tensorflow:global_step/sec: 0.539869
I0116 18:51:44.668350 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.539869
INFO:tensorflow:loss = 0.74086833, step = 666 (185.234 sec)
I0116 18:51:44.672804 140116968068992 basic_session_run_hooks.py:260] loss = 0.74086833, step = 666 (185.234 sec)
INFO:tensorflow:box_loss = 0.005537338, cls_loss = 0.36926973, det_loss = 0.64613664, step = 666 (185.234 sec)
I0116 18:51:44.673250 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.005537338, cls_loss = 0.36926973, det_loss = 0.64613664, step = 666 (185.234 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 679...
I0116 18:52:01.941650 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 679...
INFO:tensorflow:Saving checkpoints for 679 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:52:01.941995 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 679 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 679...
I0116 18:52:07.039162 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 679...
INFO:tensorflow:Loss for final step: 0.69157624.
I0116 18:52:07.789091 140116968068992 estimator.py:350] Loss for final step: 0.69157624.
INFO:tensorflow:Calling model_fn.
I0116 18:52:08.284080 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:52:08.287261 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:52:08.692155 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:08.693127 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:08.694064 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:08.695411 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:08.696354 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:08.697321 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:08.698244 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:08.699227 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:08.700733 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:08.701694 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:08.702641 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:08.703591 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:08.704630 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:08.705713 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:08.706674 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:08.707694 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:08.709159 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:08.710113 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:08.711061 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:08.711996 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:08.712972 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:08.713899 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:08.714810 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:08.715701 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:08.717034 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:08.718015 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:08.719062 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:08.720015 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:08.720864 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:08.721819 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:08.722774 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:08.723853 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:08.725418 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:08.726391 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:08.727275 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:08.728090 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:08.728940 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:08.729801 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:08.730761 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:08.731756 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:08.817941 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:52:08.818160 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:52:08.818576 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:52:08.842976 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:52:08.866837 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:52:08.889100 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:52:08.889401 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:52:08.889775 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:52:08.917003 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:52:08.943016 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:52:08.968309 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:52:08.968942 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:52:08.969585 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:52:09.000570 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:52:09.024963 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:52:09.048550 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:52:09.071107 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:52:09.071498 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:52:09.071923 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:52:09.094443 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:52:09.117755 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:52:09.140779 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:52:09.163068 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:52:09.163407 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:52:09.163822 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:52:09.188046 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:52:09.217463 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:52:09.245351 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:52:09.271157 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:52:09.271565 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:52:09.271984 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:52:09.298133 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:52:09.324985 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:52:09.351783 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:52:09.377301 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:52:09.377655 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:52:09.378086 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:52:09.403142 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:52:09.428603 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:52:09.452780 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:52:09.479561 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:52:09.479913 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:52:09.480416 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:52:09.509479 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:52:09.535867 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:52:09.560961 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:52:09.583816 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:52:09.584222 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:52:09.584618 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:52:09.608114 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:52:09.632609 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:52:09.656363 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:52:09.678806 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:09.679111 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:52:09.679494 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:52:09.707628 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:09.732714 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:09.757248 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:09.779483 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:09.779828 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:52:09.780227 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:52:09.805891 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:09.832063 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:09.855829 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:09.878941 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:09.879269 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:52:09.879649 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:52:09.903686 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:09.929752 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:09.954747 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:09.976740 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:09.977052 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:52:09.977446 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:52:10.000206 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:10.025437 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:10.049263 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:10.071704 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:52:10.072030 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:52:10.072479 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:52:10.095595 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:52:10.121565 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:52:10.145692 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:52:10.168685 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:52:10.169041 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:52:10.169431 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:52:10.192709 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:52:10.217071 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:52:10.241674 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:52:10.264081 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:52:10.264427 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:52:10.264841 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:52:10.288663 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:52:10.313011 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:52:10.337542 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:52:10.363302 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:52:10.363688 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:52:10.364100 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:52:10.387840 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:52:10.414905 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:52:10.441794 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:52:10.467338 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:52:10.467652 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:52:10.468085 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:52:10.499717 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:52:10.531251 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:52:10.556385 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:52:10.578401 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:52:10.578873 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:52:10.579354 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:52:10.607534 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:52:10.636003 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:52:10.666529 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:52:10.689911 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:52:10.690248 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:52:10.690622 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:52:10.727041 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:52:10.755397 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:52:10.780555 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:52:10.803017 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:52:10.803343 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:52:10.803735 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:52:10.831426 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:52:10.859630 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:52:10.884850 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:52:10.906870 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:52:10.907262 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:52:10.907773 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:52:10.938758 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:52:10.967767 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:52:10.992557 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:52:11.018064 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:52:11.018423 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:52:11.018885 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:52:11.048327 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:52:11.077698 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:52:11.103776 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:52:11.126683 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:52:14.784304 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:52:15.137593 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:52:15.692914 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:52:15.741225 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:52:16.586793 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:52:16Z
I0116 18:52:16.607034 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:52:16Z
INFO:tensorflow:Graph was finalized.
I0116 18:52:17.320561 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:52:17.320971: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:52:17.321232: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:52:17.321742: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:52:17.321809: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:52:17.321870: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:52:17.321900: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:52:17.321920: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:52:17.321940: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:52:17.321964: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:52:17.321987: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:52:17.322012: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:52:17.322108: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:52:17.322605: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:52:17.322966: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:52:17.323017: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:52:17.323034: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:52:17.323044: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:52:17.323144: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:52:17.323619: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:52:17.324013: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-679
I0116 18:52:17.324216 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-679
INFO:tensorflow:Running local_init_op.
I0116 18:52:19.115741 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:52:19.207838 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:52:25.836308 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:52:26.595660 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:52:27.404626 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:52:28.884105 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:52:30.439939 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:52:31.648418 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:52:33.348664 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:52:35.212259 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:52:36.673360 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:52:38.288150 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:52:39.707400 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:52:41.500085 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:52:43.446484 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:52:45.319983 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 40.55961s
I0116 18:52:57.166855 140116968068992 evaluation.py:273] Inference Time : 40.55961s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:52:57
I0116 18:52:57.167119 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:52:57
INFO:tensorflow:Saving dict for global step 679: AP = 0.06938144, AP50 = 0.08861386, AP75 = 0.07625869, AP_/car = 0.101617165, AP_/person = 0.03714571, APl = 0.13422051, APm = 0.0024371669, APs = 0.0, ARl = 0.14075945, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06858257, ARs = 0.0, box_loss = 0.004246716, cls_loss = 0.3322752, global_step = 679, loss = 0.63933975
I0116 18:52:57.167339 140116968068992 estimator.py:2066] Saving dict for global step 679: AP = 0.06938144, AP50 = 0.08861386, AP75 = 0.07625869, AP_/car = 0.101617165, AP_/person = 0.03714571, APl = 0.13422051, APm = 0.0024371669, APs = 0.0, ARl = 0.14075945, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06858257, ARs = 0.0, box_loss = 0.004246716, cls_loss = 0.3322752, global_step = 679, loss = 0.63933975
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 679: ./eagleview/checkpoints/finetuning/model.ckpt-679
I0116 18:52:57.167904 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 679: ./eagleview/checkpoints/finetuning/model.ckpt-679
I0116 18:52:57.169474 140116968068992 utils.py:439] Ckpt 0.06938143819570541 is worse than 0.072654
I0116 18:52:57.322073 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:52:57.742300 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:52:57.745262 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:52:58.121862 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:58.122878 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:58.123873 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:58.124899 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:58.125933 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:58.126838 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:58.127815 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:58.128681 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:58.130012 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:58.130893 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:58.131802 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:58.132658 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:58.133508 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:58.134334 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:58.135124 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:58.135986 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:58.137422 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:58.138334 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:58.139252 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:58.140138 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:58.141061 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:58.142037 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:58.143623 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:58.144552 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:58.145927 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:58.146864 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:58.147806 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:58.148829 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:58.149753 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:58.150630 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:58.151517 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:58.152575 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:58.153926 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:52:58.154864 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:52:58.155820 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:52:58.156700 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:52:58.157525 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:52:58.158329 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:52:58.159169 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:52:58.160077 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:52:58.257295 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:52:58.257525 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:52:58.257899 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:52:58.288414 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:52:58.312282 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:52:58.341338 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:52:58.341662 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:52:58.342066 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:52:58.373379 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:52:58.397947 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:52:58.439093 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:52:58.439460 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:52:58.439835 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:52:58.474936 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:52:58.505671 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:52:58.528863 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:52:58.557796 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:52:58.558079 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:52:58.558476 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:52:58.590469 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:52:58.621941 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:52:58.645740 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:52:58.681380 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:52:58.681692 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:52:58.682081 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:52:58.715033 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:52:58.745315 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:52:58.768936 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:52:58.803963 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:52:58.804394 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:52:58.804801 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:52:58.834349 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:52:58.864477 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:52:58.888302 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:52:58.917145 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:52:58.917493 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:52:58.917903 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:52:58.947680 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:52:58.977890 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:52:59.002035 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:52:59.044747 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:52:59.045125 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:52:59.045588 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:52:59.078870 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:52:59.118077 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:52:59.147226 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:52:59.187707 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:52:59.188106 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:52:59.188572 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:52:59.219794 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:52:59.250970 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:52:59.275415 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:52:59.304858 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:59.305212 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:52:59.305732 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:52:59.338554 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:59.369048 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:59.393558 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:59.429382 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:59.429745 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:52:59.430173 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:52:59.460528 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:59.495909 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:59.519766 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:59.555789 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:59.556149 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:52:59.556563 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:52:59.589337 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:59.625258 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:59.649495 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:59.685146 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:52:59.685467 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:52:59.685878 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:52:59.716055 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:52:59.747213 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:52:59.772203 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:52:59.800792 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:52:59.801124 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:52:59.801540 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:52:59.832015 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:52:59.862717 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:52:59.886448 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:52:59.924919 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:52:59.925241 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:52:59.925604 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:52:59.956022 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:52:59.988019 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:53:00.013562 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:53:00.049571 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:53:00.049883 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:53:00.050285 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:53:00.080086 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:53:00.111914 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:53:00.138731 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:53:00.175207 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:53:00.175604 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:53:00.176015 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:53:00.207028 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:53:00.238198 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:53:00.262423 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:53:00.291437 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:53:00.291764 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:53:00.292157 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:53:00.330025 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:53:00.368007 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:53:00.399577 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:53:00.436901 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:53:00.437234 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:53:00.437624 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:53:00.472869 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:53:00.513425 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:53:00.542045 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:53:00.577262 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:53:00.577566 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:53:00.577951 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:53:00.611546 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:53:00.646687 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:53:00.672468 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:53:00.706876 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:53:00.707203 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:53:00.707561 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:53:00.744876 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:53:00.779575 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:53:00.804713 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:53:00.841690 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:53:00.842032 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:53:00.842497 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:53:00.877136 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:53:00.913419 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:53:00.942602 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:53:00.970917 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:53:00.971279 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:53:00.971686 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:53:01.005988 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:53:01.041635 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:53:01.066796 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:53:01.102351 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:53:05.271428 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:53:05.587333 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:53:05.590638 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:53:05.593692 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:53:05.596592 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:53:05.599406 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:53:05.602281 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:53:05.606463 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:53:05.624521 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:53:07.632320 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:53:21.618566 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:53:21.618759 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:53:21.625873 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:53:21.626052 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:53:21.626152 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:53:21.626264 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:53:21.626357 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:53:21.633024 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:53:21.633151 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:53:21.638951 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
I0116 18:53:21.641002 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:53:26.342684 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:53:26.343861 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:53:29.432589 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:53:29.432969: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:53:29.433195: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:53:29.433689: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:53:29.433769: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:53:29.433858: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:53:29.433885: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:53:29.433903: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:53:29.433925: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:53:29.433950: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:53:29.433972: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:53:29.433995: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:53:29.434089: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:53:29.434621: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:53:29.435011: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:53:29.435067: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:53:29.435084: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:53:29.435095: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:53:29.435222: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:53:29.435650: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:53:29.436041: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-679
I0116 18:53:29.436707 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-679
INFO:tensorflow:Running local_init_op.
I0116 18:53:34.891372 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:53:35.258124 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 679...
I0116 18:53:52.247915 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 679...
INFO:tensorflow:Saving checkpoints for 679 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:53:52.269008 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 679 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 679...
I0116 18:53:56.846007 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 679...
INFO:tensorflow:loss = 0.5659801, step = 679
I0116 18:54:08.683089 140116968068992 basic_session_run_hooks.py:262] loss = 0.5659801, step = 679
INFO:tensorflow:box_loss = 0.003320614, cls_loss = 0.30522203, det_loss = 0.47125274, step = 679
I0116 18:54:08.683409 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.003320614, cls_loss = 0.30522203, det_loss = 0.47125274, step = 679
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 779...
I0116 18:56:58.166826 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 779...
INFO:tensorflow:Saving checkpoints for 779 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:56:58.167149 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 779 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 779...
I0116 18:57:03.575422 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 779...
INFO:tensorflow:global_step/sec: 0.568381
I0116 18:57:04.620463 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.568381
INFO:tensorflow:loss = 0.73625815, step = 779 (175.939 sec)
I0116 18:57:04.621893 140116968068992 basic_session_run_hooks.py:260] loss = 0.73625815, step = 779 (175.939 sec)
INFO:tensorflow:box_loss = 0.0055023986, cls_loss = 0.3664067, det_loss = 0.6415266, step = 779 (175.939 sec)
I0116 18:57:04.622090 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.0055023986, cls_loss = 0.3664067, det_loss = 0.6415266, step = 779 (175.939 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 793...
I0116 18:57:22.626377 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 793...
INFO:tensorflow:Saving checkpoints for 793 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:57:22.626611 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 793 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 793...
I0116 18:57:27.595716 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 793...
INFO:tensorflow:Loss for final step: 0.63829374.
I0116 18:57:28.350334 140116968068992 estimator.py:350] Loss for final step: 0.63829374.
INFO:tensorflow:Calling model_fn.
I0116 18:57:28.838293 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:57:28.842725 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:57:29.252215 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:57:29.253298 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:57:29.254270 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:57:29.255125 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:57:29.256059 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:57:29.256945 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:57:29.257853 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:57:29.258837 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:57:29.260262 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:57:29.261160 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:57:29.262108 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:57:29.263047 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:57:29.264074 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:57:29.265036 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:57:29.265971 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:57:29.266931 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:57:29.268414 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:57:29.269405 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:57:29.270464 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:57:29.271425 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:57:29.272330 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:57:29.273244 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:57:29.274145 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:57:29.275087 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:57:29.277169 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:57:29.278083 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:57:29.278955 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:57:29.279805 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:57:29.280645 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:57:29.281600 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:57:29.282567 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:57:29.283525 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:57:29.285015 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:57:29.285994 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:57:29.286921 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:57:29.287845 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:57:29.288817 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:57:29.289770 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:57:29.290683 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:57:29.291536 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:57:29.375306 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:57:29.375516 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:57:29.375890 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:57:29.398922 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:57:29.422174 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:57:29.443585 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:57:29.443955 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:57:29.444364 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:57:29.468535 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:57:29.491679 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:57:29.515769 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:57:29.516138 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:57:29.516572 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:57:29.544500 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:57:29.567996 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:57:29.590956 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:57:29.612224 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:57:29.612507 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:57:29.612887 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:57:29.635058 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:57:29.658537 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:57:29.681419 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:57:29.703075 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:57:29.703403 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:57:29.703846 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:57:29.727991 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:57:29.753776 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:57:29.776536 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:57:29.798007 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:57:29.798349 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:57:29.798703 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:57:29.821154 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:57:29.844868 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:57:29.872332 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:57:29.893444 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:57:29.893742 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:57:29.894118 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:57:29.916437 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:57:29.943615 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:57:29.970025 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:57:29.992644 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:57:29.992985 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:57:29.993382 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:57:30.017791 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:57:30.044101 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:57:30.070887 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:57:30.093604 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:57:30.093990 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:57:30.094413 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:57:30.117042 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:57:30.141959 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:57:30.167042 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:57:30.189994 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:57:30.190331 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:57:30.190737 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:57:30.213390 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:57:30.240543 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:57:30.267922 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:57:30.292668 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:57:30.293025 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:57:30.293412 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:57:30.317756 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:57:30.341428 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:57:30.365268 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:57:30.387368 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:57:30.387680 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:57:30.388068 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:57:30.410653 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:57:30.434500 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:57:30.461069 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:57:30.483632 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:57:30.483994 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:57:30.484419 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:57:30.507487 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:57:30.531337 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:57:30.557118 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:57:30.578759 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:57:30.579045 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:57:30.579451 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:57:30.602202 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:57:30.626128 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:57:30.649517 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:57:30.671498 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:57:30.671809 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:57:30.672199 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:57:30.694741 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:57:30.718738 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:57:30.742245 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:57:30.764889 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:57:30.765233 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:57:30.765647 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:57:30.788611 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:57:30.811823 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:57:30.837224 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:57:30.864557 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:57:30.865422 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:57:30.865980 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:57:30.892950 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:57:30.916995 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:57:30.941375 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:57:30.962945 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:57:30.963269 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:57:30.963643 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:57:30.990752 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:57:31.019525 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:57:31.048632 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:57:31.074688 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:57:31.075065 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:57:31.075619 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:57:31.103753 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:57:31.132162 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:57:31.162795 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:57:31.185955 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:57:31.186318 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:57:31.186741 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:57:31.214565 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:57:31.246427 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:57:31.271965 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:57:31.294801 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:57:31.295114 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:57:31.295513 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:57:31.322524 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:57:31.351741 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:57:31.376637 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:57:31.398436 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:57:31.398755 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:57:31.399176 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:57:31.428641 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:57:31.461537 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:57:31.486253 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:57:31.508070 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:57:31.508417 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:57:31.508821 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:57:31.536625 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:57:31.564330 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:57:31.589109 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:57:31.610320 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:57:35.184103 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:57:35.536530 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 18:57:36.078223 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 18:57:36.128460 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 18:57:36.940113 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T18:57:36Z
I0116 18:57:36.964019 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T18:57:36Z
INFO:tensorflow:Graph was finalized.
I0116 18:57:37.638994 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:57:37.639395: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:57:37.639619: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:57:37.640092: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:57:37.640202: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:57:37.640273: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:57:37.640319: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:57:37.640338: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:57:37.640360: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:57:37.640379: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:57:37.640415: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:57:37.640435: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:57:37.640536: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:57:37.641010: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:57:37.641387: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:57:37.641437: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:57:37.641456: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:57:37.641467: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:57:37.641568: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:57:37.642003: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:57:37.642407: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-793
I0116 18:57:37.642564 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-793
INFO:tensorflow:Running local_init_op.
I0116 18:57:39.344675 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:57:39.429303 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 18:57:45.480249 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 18:57:46.241629 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 18:57:47.061848 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 18:57:48.469379 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 18:57:49.892411 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 18:57:51.092271 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 18:57:52.857155 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 18:57:54.734755 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 18:57:56.063693 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 18:57:57.326488 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 18:57:58.631413 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 18:58:00.109199 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 18:58:01.970876 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 18:58:03.899409 140116968068992 evaluation.py:167] Evaluation [14/14]

   =====> Starting training, epoch: 1.

   =====> Starting evaluation, epoch: 1.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.77s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=10.63s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.083
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.150
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.151

   =====> Starting training, epoch: 2.

   =====> Starting evaluation, epoch: 2.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=11.02s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.073
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.082
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.150
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.155

   =====> Starting training, epoch: 3.

   =====> Starting evaluation, epoch: 3.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=11.31s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.070
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.077
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.138
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.142

   =====> Starting training, epoch: 4.

   =====> Starting evaluation, epoch: 4.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=10.96s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.072
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.080
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.137
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.070
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.141

   =====> Starting training, epoch: 5.

   =====> Starting evaluation, epoch: 5.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=11.12s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.080
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.002
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.136
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.143

   =====> Starting training, epoch: 6.

   =====> Starting evaluation, epoch: 6.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=11.22s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.076
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.002
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.134
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.141

   =====> Starting training, epoch: 7.

   =====> Starting evaluation, epoch: 7.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...INFO:tensorflow:Inference Time : 38.47911s
I0116 18:58:15.443388 140116968068992 evaluation.py:273] Inference Time : 38.47911s
INFO:tensorflow:Finished evaluation at 2021-01-16-18:58:15
I0116 18:58:15.443620 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-18:58:15
INFO:tensorflow:Saving dict for global step 793: AP = 0.0718057, AP50 = 0.089108914, AP75 = 0.080139235, AP_/car = 0.10262376, AP_/person = 0.040987637, APl = 0.13709988, APm = 0.003960396, APs = 0.0, ARl = 0.14439347, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06986957, ARs = 0.0, box_loss = 0.0042528883, cls_loss = 0.33210263, global_step = 793, loss = 0.6394772
I0116 18:58:15.443788 140116968068992 estimator.py:2066] Saving dict for global step 793: AP = 0.0718057, AP50 = 0.089108914, AP75 = 0.080139235, AP_/car = 0.10262376, AP_/person = 0.040987637, APl = 0.13709988, APm = 0.003960396, APs = 0.0, ARl = 0.14439347, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06986957, ARs = 0.0, box_loss = 0.0042528883, cls_loss = 0.33210263, global_step = 793, loss = 0.6394772
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 793: ./eagleview/checkpoints/finetuning/model.ckpt-793
I0116 18:58:15.444346 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 793: ./eagleview/checkpoints/finetuning/model.ckpt-793
I0116 18:58:15.445818 140116968068992 utils.py:439] Ckpt 0.07180570065975189 is worse than 0.072654
I0116 18:58:15.597773 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 18:58:15.997473 140116968068992 estimator.py:1162] Calling model_fn.
I0116 18:58:16.000249 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 18:58:16.386271 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:58:16.387350 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:58:16.388366 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:58:16.389328 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:58:16.390429 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:58:16.391430 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:58:16.392408 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:58:16.393391 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:58:16.394942 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:58:16.395972 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:58:16.396991 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:58:16.397923 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:58:16.398934 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:58:16.399925 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:58:16.401125 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:58:16.402136 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:58:16.403740 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:58:16.404789 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:58:16.405771 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:58:16.406826 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:58:16.407789 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:58:16.408752 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:58:16.409892 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:58:16.410894 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:58:16.412359 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:58:16.413365 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:58:16.414256 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:58:16.415168 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:58:16.416030 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:58:16.416899 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:58:16.417769 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:58:16.418663 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:58:16.420479 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 18:58:16.421470 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 18:58:16.422408 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 18:58:16.423348 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 18:58:16.424281 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 18:58:16.425226 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 18:58:16.426141 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 18:58:16.427170 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 18:58:16.519421 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 18:58:16.519644 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 18:58:16.520068 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 18:58:16.549719 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 18:58:16.573365 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 18:58:16.606597 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:58:16.606899 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 18:58:16.607283 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 18:58:16.638079 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 18:58:16.664480 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 18:58:16.699633 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 18:58:16.699979 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 18:58:16.700359 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 18:58:16.731831 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 18:58:16.763760 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 18:58:16.786936 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 18:58:16.815865 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:58:16.816201 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 18:58:16.816608 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 18:58:16.849608 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:58:16.879668 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:58:16.903140 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:58:16.938426 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:58:16.938766 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 18:58:16.939151 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 18:58:16.968379 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:58:16.997902 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 18:58:17.021085 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:58:17.056863 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 18:58:17.057245 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 18:58:17.057621 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 18:58:17.086160 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 18:58:17.117319 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 18:58:17.144778 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 18:58:17.173847 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:58:17.174153 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 18:58:17.174571 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 18:58:17.203736 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:58:17.232915 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:58:17.256849 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:58:17.291154 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:58:17.291525 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 18:58:17.291921 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 18:58:17.322089 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:58:17.353839 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 18:58:17.377739 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:58:17.412858 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 18:58:17.413291 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 18:58:17.413701 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 18:58:17.446949 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 18:58:17.479614 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 18:58:17.503017 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 18:58:17.531678 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:58:17.531988 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 18:58:17.532406 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 18:58:17.562631 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:58:17.593122 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:58:17.620138 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:58:17.659841 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:58:17.660262 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 18:58:17.660699 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 18:58:17.693756 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:58:17.733714 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:58:17.762717 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:58:17.798907 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:58:17.799252 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 18:58:17.799641 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 18:58:17.833117 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:58:17.863759 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:58:17.887739 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:58:17.922864 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 18:58:17.923217 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 18:58:17.923614 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 18:58:17.958527 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 18:58:17.989434 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 18:58:18.013810 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 18:58:18.043452 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:58:18.043951 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 18:58:18.044411 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 18:58:18.074914 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:58:18.105714 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:58:18.130148 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:58:18.170867 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:58:18.171237 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 18:58:18.171661 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 18:58:18.202607 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:58:18.233498 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:58:18.260627 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:58:18.295540 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:58:18.295877 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 18:58:18.296285 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 18:58:18.326466 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:58:18.357521 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 18:58:18.381836 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:58:18.418799 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 18:58:18.419244 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 18:58:18.419641 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 18:58:18.450730 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 18:58:18.481244 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 18:58:18.506371 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 18:58:18.535505 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:58:18.535801 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 18:58:18.536167 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 18:58:18.575809 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:58:18.613174 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:58:18.639590 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:58:18.674968 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:58:18.675293 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 18:58:18.675692 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 18:58:18.709804 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:58:18.744197 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:58:18.769523 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:58:18.804022 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:58:18.804384 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 18:58:18.804765 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 18:58:18.839478 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:58:18.879702 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:58:18.907371 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:58:18.941520 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:58:18.941862 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 18:58:18.942295 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 18:58:18.976656 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:58:19.012885 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:58:19.040494 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:58:19.080051 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 18:58:19.080398 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 18:58:19.080824 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 18:58:19.115504 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 18:58:19.151565 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 18:58:19.176008 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 18:58:19.205110 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:58:19.205477 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 18:58:19.205890 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 18:58:19.241364 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 18:58:19.277416 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 18:58:19.302043 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 18:58:19.337138 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 18:58:23.453975 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 18:58:23.757935 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 18:58:23.761145 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 18:58:23.763994 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 18:58:23.766752 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 18:58:23.769865 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 18:58:23.772747 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 18:58:23.776969 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 18:58:23.794818 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 18:58:25.750145 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 18:58:37.083439 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:58:37.083625 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 18:58:37.090573 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 18:58:37.090739 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 18:58:37.090865 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 18:58:37.090965 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 18:58:37.091058 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 18:58:37.097763 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:58:37.097875 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 18:58:37.100903 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 18:58:37.103562 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 18:58:41.662200 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 18:58:41.663368 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 18:58:47.478803 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 18:58:47.479262: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 18:58:47.479491: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:58:47.479964: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 18:58:47.480068: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 18:58:47.480138: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 18:58:47.480162: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 18:58:47.480198: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 18:58:47.480223: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 18:58:47.480247: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 18:58:47.480266: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 18:58:47.480285: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 18:58:47.480378: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:58:47.480828: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:58:47.481210: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 18:58:47.481265: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 18:58:47.481283: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 18:58:47.481293: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 18:58:47.481399: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:58:47.481817: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 18:58:47.482194: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-793
I0116 18:58:47.482863 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-793
INFO:tensorflow:Running local_init_op.
I0116 18:58:52.798437 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 18:58:53.160980 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 793...
I0116 18:59:09.622189 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 793...
INFO:tensorflow:Saving checkpoints for 793 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 18:59:09.641694 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 793 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 793...
I0116 18:59:14.156513 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 793...
INFO:tensorflow:loss = 0.5524249, step = 793
I0116 18:59:26.307935 140116968068992 basic_session_run_hooks.py:262] loss = 0.5524249, step = 793
INFO:tensorflow:box_loss = 0.0033288696, cls_loss = 0.29125172, det_loss = 0.4576952, step = 793
I0116 18:59:26.308471 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.0033288696, cls_loss = 0.29125172, det_loss = 0.4576952, step = 793
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 893...
I0116 19:02:21.150815 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 893...
INFO:tensorflow:Saving checkpoints for 893 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:02:21.151331 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 893 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 893...
I0116 19:02:26.304074 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 893...
INFO:tensorflow:global_step/sec: 0.552354
I0116 19:02:27.349945 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.552354
INFO:tensorflow:loss = 0.70898736, step = 893 (181.043 sec)
I0116 19:02:27.351135 140116968068992 basic_session_run_hooks.py:260] loss = 0.70898736, step = 893 (181.043 sec)
INFO:tensorflow:box_loss = 0.00485162, cls_loss = 0.37167504, det_loss = 0.614256, step = 893 (181.043 sec)
I0116 19:02:27.351467 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.00485162, cls_loss = 0.37167504, det_loss = 0.614256, step = 893 (181.043 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 906...
I0116 19:02:44.092691 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 906...
INFO:tensorflow:Saving checkpoints for 906 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:02:44.092979 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 906 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 906...
I0116 19:02:49.084721 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 906...
INFO:tensorflow:Loss for final step: 0.5959263.
I0116 19:02:49.823760 140116968068992 estimator.py:350] Loss for final step: 0.5959263.
INFO:tensorflow:Calling model_fn.
I0116 19:02:50.328630 140116968068992 estimator.py:1162] Calling model_fn.
I0116 19:02:50.331560 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 19:02:50.705859 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:02:50.706807 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:02:50.707746 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:02:50.708599 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:02:50.709541 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:02:50.710459 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:02:50.711488 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:02:50.712407 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:02:50.713853 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:02:50.714705 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:02:50.715567 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:02:50.716430 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:02:50.717302 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:02:50.718154 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:02:50.719120 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:02:50.720027 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:02:50.721416 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:02:50.722362 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:02:50.723310 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:02:50.724127 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:02:50.725066 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:02:50.725983 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:02:50.726859 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:02:50.727750 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:02:50.729012 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:02:50.729853 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:02:50.730686 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:02:50.731498 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:02:50.732292 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:02:50.733151 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:02:50.734032 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:02:50.734877 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:02:50.736105 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:02:50.736899 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:02:50.737736 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:02:50.738689 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:02:50.739657 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:02:50.740627 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:02:50.741826 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:02:50.742885 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:02:50.832377 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 19:02:50.832597 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 19:02:50.832977 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 19:02:50.855156 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 19:02:50.877497 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 19:02:50.898637 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:02:50.898920 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 19:02:50.899291 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 19:02:50.921719 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 19:02:50.945050 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 19:02:50.967673 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:02:50.968015 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 19:02:50.968426 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 19:02:50.993674 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 19:02:51.015914 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 19:02:51.038488 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 19:02:51.059492 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:02:51.059786 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 19:02:51.060164 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 19:02:51.082120 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:02:51.104301 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:02:51.129596 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:02:51.151768 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:02:51.152058 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 19:02:51.152453 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 19:02:51.174015 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:02:51.202237 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:02:51.225585 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:02:51.248353 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:02:51.248869 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 19:02:51.249311 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 19:02:51.271441 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:02:51.295744 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 19:02:51.319557 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:02:51.341541 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:02:51.341854 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 19:02:51.342249 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 19:02:51.364724 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:02:51.388341 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:02:51.415489 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:02:51.439257 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:02:51.439548 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 19:02:51.439904 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 19:02:51.462894 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:02:51.487158 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:02:51.509717 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:02:51.530887 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:02:51.531239 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 19:02:51.531608 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 19:02:51.553485 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:02:51.576837 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 19:02:51.599661 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:02:51.621349 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:02:51.621633 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 19:02:51.622015 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 19:02:51.643996 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:02:51.667238 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:02:51.694483 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:02:51.719652 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:02:51.720009 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 19:02:51.720448 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 19:02:51.745211 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:02:51.770912 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:02:51.801282 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:02:51.825519 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:02:51.825892 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 19:02:51.826361 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 19:02:51.850825 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:02:51.873913 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:02:51.899686 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:02:51.921472 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:02:51.921791 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 19:02:51.922171 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 19:02:51.944295 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:02:51.967839 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:02:51.991043 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:02:52.012227 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:02:52.012523 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 19:02:52.012879 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 19:02:52.035197 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:02:52.057967 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:02:52.084092 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:02:52.109555 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:02:52.109877 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 19:02:52.110257 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 19:02:52.135020 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:02:52.157881 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:02:52.180982 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:02:52.202342 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:02:52.202699 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 19:02:52.203113 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 19:02:52.226619 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:02:52.250030 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:02:52.272744 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:02:52.294433 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:02:52.294777 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 19:02:52.295148 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 19:02:52.318221 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:02:52.341346 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 19:02:52.365237 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:02:52.386971 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:02:52.387317 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 19:02:52.387706 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 19:02:52.417234 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:02:52.444801 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:02:52.470509 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:02:52.491959 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:02:52.492271 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 19:02:52.492637 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 19:02:52.519040 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:02:52.546331 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:02:52.570911 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:02:52.592045 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:02:52.592353 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 19:02:52.592721 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 19:02:52.620122 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:02:52.647464 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:02:52.671813 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:02:52.692586 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:02:52.692890 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 19:02:52.693261 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 19:02:52.723448 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:02:52.750327 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:02:52.774324 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:02:52.800012 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:02:52.800341 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 19:02:52.800710 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 19:02:52.830981 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:02:52.858527 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:02:52.883148 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:02:52.904301 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:02:52.904667 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 19:02:52.905086 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 19:02:52.932924 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 19:02:52.960047 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 19:02:52.985108 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 19:02:53.010236 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:02:56.452582 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 19:02:56.787536 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 19:02:57.314895 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 19:02:57.359627 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 19:02:58.128626 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T19:02:58Z
I0116 19:02:58.146644 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T19:02:58Z
INFO:tensorflow:Graph was finalized.
I0116 19:02:59.088953 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 19:02:59.089395: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 19:02:59.089621: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:02:59.090062: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 19:02:59.090122: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 19:02:59.090213: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 19:02:59.090244: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 19:02:59.090264: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 19:02:59.090284: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 19:02:59.090304: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 19:02:59.090321: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 19:02:59.090340: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 19:02:59.090436: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:02:59.090885: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:02:59.091308: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 19:02:59.091373: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 19:02:59.091390: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 19:02:59.091401: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 19:02:59.091527: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:02:59.091992: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:02:59.092429: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-906
I0116 19:02:59.092590 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-906
INFO:tensorflow:Running local_init_op.
I0116 19:03:00.730488 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 19:03:00.811294 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 19:03:06.102679 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 19:03:07.419299 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 19:03:08.710268 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 19:03:10.448769 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 19:03:11.849107 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 19:03:13.381070 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 19:03:14.735369 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 19:03:16.579581 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 19:03:17.953675 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 19:03:19.102043 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 19:03:20.641809 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 19:03:22.083894 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 19:03:23.683822 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 19:03:25.225286 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 38.08434s
I0116 19:03:36.231191 140116968068992 evaluation.py:273] Inference Time : 38.08434s
INFO:tensorflow:Finished evaluation at 2021-01-16-19:03:36
I0116 19:03:36.231438 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-19:03:36
INFO:tensorflow:Saving dict for global step 906: AP = 0.070844226, AP50 = 0.089108914, AP75 = 0.07886169, AP_/car = 0.10186652, AP_/person = 0.03982193, APl = 0.13583867, APm = 0.003960396, APs = 0.0, ARl = 0.14239879, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06900375, ARs = 0.0, box_loss = 0.004244548, cls_loss = 0.3325078, global_step = 906, loss = 0.63946587
I0116 19:03:36.231616 140116968068992 estimator.py:2066] Saving dict for global step 906: AP = 0.070844226, AP50 = 0.089108914, AP75 = 0.07886169, AP_/car = 0.10186652, AP_/person = 0.03982193, APl = 0.13583867, APm = 0.003960396, APs = 0.0, ARl = 0.14239879, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06900375, ARs = 0.0, box_loss = 0.004244548, cls_loss = 0.3325078, global_step = 906, loss = 0.63946587
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 906: ./eagleview/checkpoints/finetuning/model.ckpt-906
I0116 19:03:36.232302 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 906: ./eagleview/checkpoints/finetuning/model.ckpt-906
I0116 19:03:36.233794 140116968068992 utils.py:439] Ckpt 0.07084422558546066 is worse than 0.072654
I0116 19:03:36.373818 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 19:03:36.760053 140116968068992 estimator.py:1162] Calling model_fn.
I0116 19:03:36.762942 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 19:03:37.124591 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:03:37.125572 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:03:37.126532 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:03:37.127437 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:03:37.128378 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:03:37.129263 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:03:37.130094 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:03:37.130896 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:03:37.132169 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:03:37.133091 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:03:37.134061 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:03:37.134911 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:03:37.135789 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:03:37.136814 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:03:37.137762 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:03:37.138627 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:03:37.139962 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:03:37.140820 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:03:37.141702 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:03:37.142551 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:03:37.143364 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:03:37.144233 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:03:37.145200 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:03:37.146089 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:03:37.147436 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:03:37.148463 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:03:37.149465 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:03:37.150402 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:03:37.151237 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:03:37.152101 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:03:37.152996 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:03:37.153890 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:03:37.155304 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:03:37.156229 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:03:37.157060 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:03:37.157876 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:03:37.158808 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:03:37.159658 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:03:37.160480 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:03:37.161391 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:03:37.251465 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 19:03:37.251670 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 19:03:37.252077 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 19:03:37.280973 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 19:03:37.303473 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 19:03:37.330595 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:03:37.330893 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 19:03:37.331303 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 19:03:37.360540 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 19:03:37.383092 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 19:03:37.420802 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:03:37.421149 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 19:03:37.421546 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 19:03:37.449697 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 19:03:37.479999 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 19:03:37.509006 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 19:03:37.536988 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:03:37.537345 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 19:03:37.537731 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 19:03:37.566611 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:03:37.596110 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:03:37.618898 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:03:37.652845 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:03:37.653147 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 19:03:37.653590 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 19:03:37.682065 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:03:37.718681 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:03:37.744902 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:03:37.781252 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:03:37.781618 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 19:03:37.782034 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 19:03:37.811583 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:03:37.841321 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 19:03:37.863854 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:03:37.891718 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:03:37.892002 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 19:03:37.892418 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 19:03:37.921201 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:03:37.951105 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:03:37.973633 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:03:38.011429 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:03:38.011744 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 19:03:38.012176 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 19:03:38.040780 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:03:38.069926 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:03:38.092485 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:03:38.126146 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:03:38.126518 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 19:03:38.126880 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 19:03:38.155713 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:03:38.190285 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 19:03:38.218005 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:03:38.251329 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:03:38.251719 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 19:03:38.252132 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 19:03:38.280669 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:03:38.313367 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:03:38.335498 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:03:38.369505 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:03:38.369812 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 19:03:38.370195 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 19:03:38.398642 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:03:38.428729 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:03:38.450974 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:03:38.486066 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:03:38.486391 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 19:03:38.486756 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 19:03:38.525477 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:03:38.561523 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:03:38.584950 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:03:38.617990 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:03:38.618370 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 19:03:38.618757 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 19:03:38.646774 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:03:38.677373 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:03:38.703036 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:03:38.733607 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:03:38.733934 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 19:03:38.734348 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 19:03:38.763733 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:03:38.793059 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:03:38.816638 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:03:38.853380 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:03:38.853892 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 19:03:38.854393 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 19:03:38.885890 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:03:38.917155 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:03:38.940525 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:03:38.975226 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:03:38.975531 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 19:03:38.975897 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 19:03:39.008036 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:03:39.042886 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:03:39.067057 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:03:39.101988 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:03:39.102396 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 19:03:39.102786 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 19:03:39.132106 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:03:39.162656 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 19:03:39.185618 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:03:39.214528 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:03:39.214851 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 19:03:39.215271 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 19:03:39.248803 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:03:39.283231 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:03:39.310051 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:03:39.345747 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:03:39.346113 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 19:03:39.346561 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 19:03:39.380237 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:03:39.414671 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:03:39.439562 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:03:39.477938 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:03:39.478377 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 19:03:39.478866 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 19:03:39.571462 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:03:39.615723 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:03:39.640171 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:03:39.674173 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:03:39.674562 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 19:03:39.674931 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 19:03:39.708757 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:03:39.742223 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:03:39.766830 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:03:39.799995 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:03:39.800324 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 19:03:39.800711 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 19:03:39.833889 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:03:39.866872 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:03:39.890436 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:03:39.922453 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:03:39.922827 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 19:03:39.923298 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 19:03:39.958074 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 19:03:39.992966 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 19:03:40.018038 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 19:03:40.051670 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:03:44.034198 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 19:03:44.318246 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 19:03:44.321197 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 19:03:44.324021 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 19:03:44.327953 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 19:03:44.332398 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 19:03:44.335530 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 19:03:44.339640 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 19:03:44.356973 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 19:03:46.234941 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 19:03:57.270560 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 19:03:57.270744 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 19:03:57.277530 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 19:03:57.277696 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 19:03:57.277809 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 19:03:57.277893 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 19:03:57.277982 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 19:03:57.284584 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 19:03:57.284713 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 19:03:57.287979 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 19:03:57.292407 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 19:04:01.696094 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 19:04:01.697296 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 19:04:04.612153 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 19:04:04.612536: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 19:04:04.612773: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:04:04.613282: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 19:04:04.613339: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 19:04:04.613394: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 19:04:04.613422: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 19:04:04.613444: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 19:04:04.613466: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 19:04:04.613488: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 19:04:04.613513: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 19:04:04.613540: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 19:04:04.613649: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:04:04.614105: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:04:04.614519: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 19:04:04.614609: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 19:04:04.614626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 19:04:04.614636: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 19:04:04.614747: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:04:04.615276: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:04:04.615837: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-906
I0116 19:04:04.616625 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-906
INFO:tensorflow:Running local_init_op.
I0116 19:04:09.918557 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 19:04:10.282808 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 906...
I0116 19:04:26.352073 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 906...
INFO:tensorflow:Saving checkpoints for 906 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:04:26.371705 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 906 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 906...
I0116 19:04:30.843566 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 906...
INFO:tensorflow:loss = 0.5428171, step = 906
I0116 19:04:42.150275 140116968068992 basic_session_run_hooks.py:262] loss = 0.5428171, step = 906
INFO:tensorflow:box_loss = 0.0028533554, cls_loss = 0.30541855, det_loss = 0.44808632, step = 906
I0116 19:04:42.150802 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.0028533554, cls_loss = 0.30541855, det_loss = 0.44808632, step = 906
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 1006...
I0116 19:07:25.681225 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 1006...
INFO:tensorflow:Saving checkpoints for 1006 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:07:25.681532 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 1006 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 1006...
I0116 19:07:30.916258 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 1006...
INFO:tensorflow:global_step/sec: 0.58897
I0116 19:07:31.937532 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.58897
INFO:tensorflow:loss = 0.6952004, step = 1006 (169.792 sec)
I0116 19:07:31.941816 140116968068992 basic_session_run_hooks.py:260] loss = 0.6952004, step = 1006 (169.792 sec)
INFO:tensorflow:box_loss = 0.0053660334, cls_loss = 0.3321678, det_loss = 0.60046947, step = 1006 (169.791 sec)
I0116 19:07:31.942144 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.0053660334, cls_loss = 0.3321678, det_loss = 0.60046947, step = 1006 (169.791 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 1019...
I0116 19:07:47.679027 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 1019...
INFO:tensorflow:Saving checkpoints for 1019 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:07:47.679329 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 1019 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 1019...
I0116 19:07:52.493526 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 1019...
INFO:tensorflow:Loss for final step: 0.63868594.
I0116 19:07:53.217913 140116968068992 estimator.py:350] Loss for final step: 0.63868594.
INFO:tensorflow:Calling model_fn.
I0116 19:07:53.695076 140116968068992 estimator.py:1162] Calling model_fn.
I0116 19:07:53.697946 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 19:07:54.045846 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:07:54.046760 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:07:54.047613 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:07:54.048565 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:07:54.049472 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:07:54.050369 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:07:54.051201 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:07:54.052018 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:07:54.053344 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:07:54.054250 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:07:54.055058 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:07:54.055873 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:07:54.056804 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:07:54.057732 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:07:54.058611 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:07:54.059502 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:07:54.060742 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:07:54.061558 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:07:54.062412 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:07:54.063233 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:07:54.064083 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:07:54.065001 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:07:54.065833 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:07:54.066662 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:07:54.068011 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:07:54.068829 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:07:54.069635 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:07:54.070524 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:07:54.071349 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:07:54.072218 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:07:54.073065 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:07:54.073879 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:07:54.075149 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:07:54.075952 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:07:54.076839 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:07:54.077702 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:07:54.078581 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:07:54.079401 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:07:54.080226 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:07:54.081064 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:07:54.161939 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 19:07:54.162170 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 19:07:54.162550 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 19:07:54.184943 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 19:07:54.207930 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 19:07:54.229152 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:07:54.229446 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 19:07:54.229789 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 19:07:54.250962 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 19:07:54.272295 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 19:07:54.292926 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:07:54.293272 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 19:07:54.293628 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 19:07:54.314315 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 19:07:54.340089 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 19:07:54.362159 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 19:07:54.382420 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:07:54.382696 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 19:07:54.383051 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 19:07:54.403543 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:07:54.430052 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:07:54.451557 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:07:54.472425 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:07:54.472707 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 19:07:54.473060 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 19:07:54.495008 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:07:54.516666 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:07:54.538531 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:07:54.559883 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:07:54.560276 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 19:07:54.560683 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 19:07:54.583263 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:07:54.607408 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 19:07:54.636098 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:07:54.657040 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:07:54.657364 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 19:07:54.657761 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 19:07:54.678382 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:07:54.700482 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:07:54.724006 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:07:54.745961 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:07:54.746297 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 19:07:54.746669 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 19:07:54.767736 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:07:54.790348 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:07:54.813268 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:07:54.837233 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:07:54.837764 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 19:07:54.838319 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 19:07:54.862863 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:07:54.884688 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 19:07:54.906341 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:07:54.926425 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:07:54.926717 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 19:07:54.927077 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 19:07:54.948118 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:07:54.970452 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:07:54.992301 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:07:55.012795 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:07:55.013096 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 19:07:55.013510 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 19:07:55.036300 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:07:55.058552 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:07:55.081156 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:07:55.102412 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:07:55.102709 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 19:07:55.103080 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 19:07:55.124954 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:07:55.151288 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:07:55.173602 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:07:55.195116 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:07:55.195434 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 19:07:55.195800 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 19:07:55.217411 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:07:55.239729 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:07:55.262861 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:07:55.283422 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:07:55.283704 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 19:07:55.284057 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 19:07:55.305013 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:07:55.326783 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:07:55.349348 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:07:55.370575 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:07:55.370865 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 19:07:55.371242 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 19:07:55.392499 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:07:55.414584 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:07:55.444947 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:07:55.466149 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:07:55.466486 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 19:07:55.466853 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 19:07:55.488879 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:07:55.510890 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:07:55.534873 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:07:55.557616 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:07:55.557962 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 19:07:55.558347 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 19:07:55.580082 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:07:55.602317 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 19:07:55.624955 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:07:55.647338 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:07:55.647650 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 19:07:55.648076 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 19:07:55.673989 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:07:55.699703 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:07:55.722671 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:07:55.743156 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:07:55.743499 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 19:07:55.743906 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 19:07:55.769354 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:07:55.795154 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:07:55.818166 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:07:55.840723 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:07:55.841117 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 19:07:55.841613 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 19:07:55.872704 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:07:55.902104 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:07:55.926506 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:07:55.947235 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:07:55.947528 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 19:07:55.947882 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 19:07:55.973731 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:07:55.999959 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:07:56.023081 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:07:56.046147 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:07:56.046494 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 19:07:56.046904 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 19:07:56.072766 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:07:56.099102 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:07:56.122315 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:07:56.143115 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:07:56.143474 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 19:07:56.143827 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 19:07:56.170755 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 19:07:56.197354 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 19:07:56.220624 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 19:07:56.241056 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:07:59.531560 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 19:07:59.860794 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 19:08:00.366096 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 19:08:00.408413 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 19:08:01.147489 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T19:08:01Z
I0116 19:08:01.167024 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T19:08:01Z
INFO:tensorflow:Graph was finalized.
I0116 19:08:01.803450 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 19:08:01.803855: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 19:08:01.804074: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:08:01.804551: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 19:08:01.804610: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 19:08:01.804674: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 19:08:01.804705: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 19:08:01.804728: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 19:08:01.804746: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 19:08:01.804763: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 19:08:01.804779: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 19:08:01.804799: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 19:08:01.804888: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:08:01.805318: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:08:01.805662: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 19:08:01.805783: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 19:08:01.805800: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 19:08:01.805810: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 19:08:01.805916: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:08:01.806332: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:08:01.806689: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-1019
I0116 19:08:01.806845 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-1019
INFO:tensorflow:Running local_init_op.
I0116 19:08:03.424119 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 19:08:03.509089 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 19:08:08.759643 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 19:08:09.672103 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 19:08:11.134774 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 19:08:12.798654 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 19:08:14.299565 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 19:08:15.733928 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 19:08:17.290365 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 19:08:19.061498 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 19:08:20.568673 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 19:08:21.982509 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 19:08:23.496605 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 19:08:25.123965 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 19:08:26.611292 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 19:08:28.369652 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 38.13445s
I0116 19:08:39.301699 140116968068992 evaluation.py:273] Inference Time : 38.13445s
INFO:tensorflow:Finished evaluation at 2021-01-16-19:08:39
I0116 19:08:39.301967 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-19:08:39
INFO:tensorflow:Saving dict for global step 1019: AP = 0.07087194, AP50 = 0.089108914, AP75 = 0.0787058, AP_/car = 0.10186652, AP_/person = 0.039877366, APl = 0.1357828, APm = 0.003960396, APs = 0.0, ARl = 0.14356975, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06930459, ARs = 0.0, box_loss = 0.0042618527, cls_loss = 0.33224344, global_step = 1019, loss = 0.6400668
I0116 19:08:39.302140 140116968068992 estimator.py:2066] Saving dict for global step 1019: AP = 0.07087194, AP50 = 0.089108914, AP75 = 0.0787058, AP_/car = 0.10186652, AP_/person = 0.039877366, APl = 0.1357828, APm = 0.003960396, APs = 0.0, ARl = 0.14356975, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06930459, ARs = 0.0, box_loss = 0.0042618527, cls_loss = 0.33224344, global_step = 1019, loss = 0.6400668
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 1019: ./eagleview/checkpoints/finetuning/model.ckpt-1019
I0116 19:08:39.302754 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 1019: ./eagleview/checkpoints/finetuning/model.ckpt-1019
I0116 19:08:39.304164 140116968068992 utils.py:439] Ckpt 0.07087194174528122 is worse than 0.072654
I0116 19:08:39.444976 140116968068992 dataloader.py:92] target_size = (768, 768), output_size = (768, 768)
INFO:tensorflow:Calling model_fn.
I0116 19:08:39.823390 140116968068992 estimator.py:1162] Calling model_fn.
I0116 19:08:39.826123 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 19:08:40.177074 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:08:40.177968 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:08:40.178819 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:08:40.179639 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:08:40.180531 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:08:40.181368 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:08:40.182171 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:08:40.182984 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:08:40.184261 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:08:40.185045 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:08:40.185946 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:08:40.186771 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:08:40.188139 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:08:40.188970 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:08:40.189792 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:08:40.190624 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:08:40.192452 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:08:40.193269 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:08:40.194092 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:08:40.194929 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:08:40.195842 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:08:40.196926 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:08:40.197857 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:08:40.198719 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:08:40.200029 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:08:40.200855 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:08:40.201753 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:08:40.202704 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:08:40.203615 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:08:40.204523 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:08:40.205442 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:08:40.206314 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:08:40.207549 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:08:40.208419 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:08:40.209302 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:08:40.210211 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:08:40.211064 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:08:40.211894 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:08:40.212787 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:08:40.213757 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:08:40.304490 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 19:08:40.304733 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 19:08:40.305120 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 19:08:40.335674 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 19:08:40.358776 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 19:08:40.387290 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:08:40.387583 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 19:08:40.387946 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 19:08:40.416173 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 19:08:40.443365 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 19:08:40.477294 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:08:40.477633 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 19:08:40.478001 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 19:08:40.506670 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 19:08:40.536255 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 19:08:40.560505 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 19:08:40.588076 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:08:40.588411 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 19:08:40.588830 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 19:08:40.616812 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:08:40.645727 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:08:40.667878 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:08:40.701384 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:08:40.701705 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 19:08:40.702095 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 19:08:40.731919 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:08:40.762928 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:08:40.785067 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:08:40.818484 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:08:40.818827 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 19:08:40.819261 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 19:08:40.847318 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:08:40.876061 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 19:08:40.898539 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:08:40.925211 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:08:40.925493 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 19:08:40.925853 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 19:08:40.958673 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:08:40.988046 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:08:41.011012 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:08:41.044448 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:08:41.044786 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 19:08:41.045192 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 19:08:41.073194 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:08:41.101754 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:08:41.124562 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:08:41.162068 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:08:41.162444 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 19:08:41.162816 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 19:08:41.190673 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:08:41.220088 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 19:08:41.249098 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:08:41.279765 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:08:41.280154 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 19:08:41.280672 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 19:08:41.310563 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:08:41.340251 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:08:41.363316 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:08:41.396674 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:08:41.396985 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 19:08:41.397381 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 19:08:41.424970 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:08:41.457369 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:08:41.479724 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:08:41.513792 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:08:41.514120 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 19:08:41.514521 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 19:08:41.545641 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:08:41.575602 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:08:41.597954 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:08:41.631718 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:08:41.632029 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 19:08:41.632522 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 19:08:41.660831 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:08:41.689988 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:08:41.711935 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:08:41.742047 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:08:41.742372 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 19:08:41.742742 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 19:08:41.771436 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:08:41.800104 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:08:41.823590 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:08:41.856720 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:08:41.857014 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 19:08:41.857410 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 19:08:41.885117 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:08:41.913892 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:08:41.937907 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:08:41.973637 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:08:41.973938 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 19:08:41.974330 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 19:08:42.002660 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:08:42.031827 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:08:42.054414 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:08:42.087797 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:08:42.088155 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 19:08:42.088528 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 19:08:42.116242 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:08:42.151258 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 19:08:42.175231 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:08:42.201723 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:08:42.202058 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 19:08:42.202489 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 19:08:42.235680 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:08:42.269004 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:08:42.291941 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:08:42.326081 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:08:42.326458 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 19:08:42.326949 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 19:08:42.367418 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:08:42.405575 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:08:42.430923 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:08:42.463802 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:08:42.464113 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 19:08:42.464517 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 19:08:42.497551 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:08:42.530921 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:08:42.557107 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:08:42.589944 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:08:42.590301 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 19:08:42.590672 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 19:08:42.623251 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:08:42.656638 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:08:42.680747 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:08:42.712899 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:08:42.713218 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 19:08:42.713579 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 19:08:42.746064 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:08:42.786871 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:08:42.810875 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:08:42.837745 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:08:42.838045 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 19:08:42.838428 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 19:08:42.870515 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 19:08:42.903545 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 19:08:42.927064 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 19:08:42.963358 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:08:46.829322 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 19:08:47.104714 140116968068992 utils.py:372] Adding scale summary ('lrn_rate', <tf.Tensor 'Select:0' shape=() dtype=float32>)
I0116 19:08:47.107604 140116968068992 utils.py:372] Adding scale summary ('trainloss/cls_loss', <tf.Tensor 'AddN:0' shape=() dtype=float32>)
I0116 19:08:47.110528 140116968068992 utils.py:372] Adding scale summary ('trainloss/box_loss', <tf.Tensor 'AddN_1:0' shape=() dtype=float32>)
I0116 19:08:47.113390 140116968068992 utils.py:372] Adding scale summary ('trainloss/det_loss', <tf.Tensor 'add_3:0' shape=() dtype=float32>)
I0116 19:08:47.115926 140116968068992 utils.py:372] Adding scale summary ('trainloss/reg_l2_loss', <tf.Tensor 'mul_14:0' shape=() dtype=float32>)
I0116 19:08:47.118623 140116968068992 utils.py:372] Adding scale summary ('trainloss/loss', <tf.Tensor 'add_4:0' shape=() dtype=float32>)
I0116 19:08:47.122594 140116968068992 utils.py:372] Adding scale summary ('train_epochs', <tf.Tensor 'truediv_7:0' shape=() dtype=float32>)
I0116 19:08:47.139333 140116968068992 det_model_fn.py:397] clip gradients norm by 10.000000
I0116 19:08:48.983366 140116968068992 utils.py:372] Adding scale summary ('gradient_norm', <tf.Tensor 'clip/global_norm_1/global_norm:0' shape=() dtype=float32>)
I0116 19:09:03.154558 140116968068992 det_model_fn.py:539] restore variables from ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 19:09:03.154764 140116968068992 utils.py:99] Init model from checkpoint ./eagleview/checkpoints/pretrained/efficientdet-d2/
I0116 19:09:03.161006 140116968068992 utils.py:155] Init global_step from ckpt var global_step
I0116 19:09:03.161175 140116968068992 utils.py:155] Init efficientnet-b2/stem/conv2d/kernel from ckpt var efficientnet-b2/stem/conv2d/kernel
I0116 19:09:03.161309 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/gamma from ckpt var efficientnet-b2/stem/tpu_batch_normalization/gamma
I0116 19:09:03.161427 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/beta from ckpt var efficientnet-b2/stem/tpu_batch_normalization/beta
I0116 19:09:03.161508 140116968068992 utils.py:155] Init efficientnet-b2/stem/tpu_batch_normalization/moving_mean from ckpt var efficientnet-b2/stem/tpu_batch_normalization/moving_mean
I0116 19:09:03.168079 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
I0116 19:09:03.168213 140116968068992 utils.py:148] skip class_net/class-predict/bias ((18,) vs [810]) -- shape mismatch
I0116 19:09:03.174218 140116968068992 utils.py:148] skip class_net/class-predict/bias/ExponentialMovingAverage ((18,) vs [810]) -- shape mismatch
I0116 19:09:03.174526 140116968068992 utils.py:148] skip class_net/class-predict/pointwise_kernel/ExponentialMovingAverage ((1, 1, 112, 18) vs [1, 1, 112, 810]) -- shape mismatch
INFO:tensorflow:Done calling model_fn.
I0116 19:09:07.519520 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Create CheckpointSaverHook.
I0116 19:09:07.520603 140116968068992 basic_session_run_hooks.py:546] Create CheckpointSaverHook.
INFO:tensorflow:Graph was finalized.
I0116 19:09:10.368674 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 19:09:10.369047: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 19:09:10.369278: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:09:10.369713: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 19:09:10.369768: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 19:09:10.369829: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 19:09:10.369855: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 19:09:10.369873: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 19:09:10.369891: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 19:09:10.369913: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 19:09:10.369933: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 19:09:10.369955: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 19:09:10.370040: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:09:10.370519: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:09:10.370874: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 19:09:10.370929: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 19:09:10.370945: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 19:09:10.370956: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 19:09:10.371058: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:09:10.371486: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:09:10.371849: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-1019
I0116 19:09:10.372496 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-1019
INFO:tensorflow:Running local_init_op.
I0116 19:09:15.516959 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 19:09:15.887988 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 1019...
I0116 19:09:31.732104 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 1019...
INFO:tensorflow:Saving checkpoints for 1019 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:09:31.752717 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 1019 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 1019...
I0116 19:09:36.157941 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 1019...
INFO:tensorflow:loss = 0.5644793, step = 1019
I0116 19:09:46.951500 140116968068992 basic_session_run_hooks.py:262] loss = 0.5644793, step = 1019
INFO:tensorflow:box_loss = 0.003021648, cls_loss = 0.31866598, det_loss = 0.46974838, step = 1019
I0116 19:09:46.951799 140116968068992 basic_session_run_hooks.py:262] box_loss = 0.003021648, cls_loss = 0.31866598, det_loss = 0.46974838, step = 1019
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 1119...
I0116 19:12:29.207423 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 1119...
INFO:tensorflow:Saving checkpoints for 1119 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:12:29.207838 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 1119 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 1119...
I0116 19:12:34.352318 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 1119...
INFO:tensorflow:global_step/sec: 0.593743
I0116 19:12:35.374035 140116968068992 basic_session_run_hooks.py:702] global_step/sec: 0.593743
INFO:tensorflow:loss = 0.64766634, step = 1119 (168.425 sec)
I0116 19:12:35.376786 140116968068992 basic_session_run_hooks.py:260] loss = 0.64766634, step = 1119 (168.425 sec)
INFO:tensorflow:box_loss = 0.004402936, cls_loss = 0.33278835, det_loss = 0.5529351, step = 1119 (168.425 sec)
I0116 19:12:35.377005 140116968068992 basic_session_run_hooks.py:260] box_loss = 0.004402936, cls_loss = 0.33278835, det_loss = 0.5529351, step = 1119 (168.425 sec)
INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 1133...
I0116 19:12:52.802145 140116968068992 basic_session_run_hooks.py:614] Calling checkpoint listeners before saving checkpoint 1133...
INFO:tensorflow:Saving checkpoints for 1133 into ./eagleview/checkpoints/finetuning/model.ckpt.
I0116 19:12:52.802453 140116968068992 basic_session_run_hooks.py:618] Saving checkpoints for 1133 into ./eagleview/checkpoints/finetuning/model.ckpt.
INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 1133...
I0116 19:12:57.712260 140116968068992 basic_session_run_hooks.py:626] Calling checkpoint listeners after saving checkpoint 1133...
INFO:tensorflow:Loss for final step: 0.6480731.
I0116 19:12:58.484320 140116968068992 estimator.py:350] Loss for final step: 0.6480731.
INFO:tensorflow:Calling model_fn.
I0116 19:12:58.936739 140116968068992 estimator.py:1162] Calling model_fn.
I0116 19:12:58.939492 140116968068992 efficientnet_builder.py:215] global_params= GlobalParams(batch_norm_momentum=0.99, batch_norm_epsilon=0.001, dropout_rate=0.3, data_format='channels_last', num_classes=1000, width_coefficient=1.1, depth_coefficient=1.2, depth_divisor=8, min_depth=None, survival_prob=0.8, relu_fn=functools.partial(<function activation_fn at 0x7f6f3215a7b8>, act_type='swish'), batch_norm=<class 'utils.BatchNormalization'>, use_se=True, local_pooling=None, condconv_num_experts=None, clip_projection_output=False, blocks_args=['r1_k3_s11_e1_i32_o16_se0.25', 'r2_k3_s22_e6_i16_o24_se0.25', 'r2_k5_s22_e6_i24_o40_se0.25', 'r3_k3_s22_e6_i40_o80_se0.25', 'r3_k5_s11_e6_i80_o112_se0.25', 'r4_k5_s22_e6_i112_o192_se0.25', 'r1_k3_s11_e6_i192_o320_se0.25'], fix_head_stem=None, grad_checkpoint=False)
I0116 19:12:59.287082 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:12:59.288011 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:12:59.288878 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:12:59.289700 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:12:59.290598 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:12:59.291434 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:12:59.292259 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:12:59.293065 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:12:59.294325 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:12:59.295119 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:12:59.295998 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:12:59.296813 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:12:59.297629 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:12:59.298447 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:12:59.299278 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:12:59.300091 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:12:59.301387 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:12:59.302262 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:12:59.303092 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:12:59.303915 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:12:59.304747 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:12:59.305559 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:12:59.307039 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:12:59.307924 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:12:59.309198 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:12:59.310027 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:12:59.310855 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:12:59.311724 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:12:59.312526 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:12:59.313347 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:12:59.314155 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:12:59.314969 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:12:59.316204 140116968068992 efficientdet_keras.py:749] fnode 0 : {'feat_level': 6, 'inputs_offsets': [3, 4]}
I0116 19:12:59.317036 140116968068992 efficientdet_keras.py:749] fnode 1 : {'feat_level': 5, 'inputs_offsets': [2, 5]}
I0116 19:12:59.317853 140116968068992 efficientdet_keras.py:749] fnode 2 : {'feat_level': 4, 'inputs_offsets': [1, 6]}
I0116 19:12:59.318699 140116968068992 efficientdet_keras.py:749] fnode 3 : {'feat_level': 3, 'inputs_offsets': [0, 7]}
I0116 19:12:59.319560 140116968068992 efficientdet_keras.py:749] fnode 4 : {'feat_level': 4, 'inputs_offsets': [1, 7, 8]}
I0116 19:12:59.320389 140116968068992 efficientdet_keras.py:749] fnode 5 : {'feat_level': 5, 'inputs_offsets': [2, 6, 9]}
I0116 19:12:59.321210 140116968068992 efficientdet_keras.py:749] fnode 6 : {'feat_level': 6, 'inputs_offsets': [3, 5, 10]}
I0116 19:12:59.322071 140116968068992 efficientdet_keras.py:749] fnode 7 : {'feat_level': 7, 'inputs_offsets': [4, 11]}
I0116 19:12:59.401378 140116968068992 efficientnet_model.py:735] Built stem stem : (16, 384, 384, 32)
I0116 19:12:59.401580 140116968068992 efficientnet_model.py:756] block_0 survival_prob: 1.0
I0116 19:12:59.401943 140116968068992 efficientnet_model.py:374] Block blocks_0 input shape: (16, 384, 384, 32)
I0116 19:12:59.424012 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 32)
I0116 19:12:59.448596 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 32)
I0116 19:12:59.471311 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:12:59.471613 140116968068992 efficientnet_model.py:756] block_1 survival_prob: 0.991304347826087
I0116 19:12:59.471969 140116968068992 efficientnet_model.py:374] Block blocks_1 input shape: (16, 384, 384, 16)
I0116 19:12:59.494882 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 384, 384, 16)
I0116 19:12:59.517273 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 16)
I0116 19:12:59.538251 140116968068992 efficientnet_model.py:414] Project shape: (16, 384, 384, 16)
I0116 19:12:59.538568 140116968068992 efficientnet_model.py:756] block_2 survival_prob: 0.9826086956521739
I0116 19:12:59.538932 140116968068992 efficientnet_model.py:374] Block blocks_2 input shape: (16, 384, 384, 16)
I0116 19:12:59.560009 140116968068992 efficientnet_model.py:390] Expand shape: (16, 384, 384, 96)
I0116 19:12:59.581628 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 96)
I0116 19:12:59.608899 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 96)
I0116 19:12:59.630974 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:12:59.631268 140116968068992 efficientnet_model.py:756] block_3 survival_prob: 0.9739130434782609
I0116 19:12:59.631645 140116968068992 efficientnet_model.py:374] Block blocks_3 input shape: (16, 192, 192, 24)
I0116 19:12:59.653167 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:12:59.675806 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:12:59.700150 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:12:59.720726 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:12:59.721002 140116968068992 efficientnet_model.py:756] block_4 survival_prob: 0.9652173913043478
I0116 19:12:59.721374 140116968068992 efficientnet_model.py:374] Block blocks_4 input shape: (16, 192, 192, 24)
I0116 19:12:59.742167 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:12:59.763720 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 192, 192, 144)
I0116 19:12:59.786303 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:12:59.810614 140116968068992 efficientnet_model.py:414] Project shape: (16, 192, 192, 24)
I0116 19:12:59.810995 140116968068992 efficientnet_model.py:756] block_5 survival_prob: 0.9565217391304348
I0116 19:12:59.811386 140116968068992 efficientnet_model.py:374] Block blocks_5 input shape: (16, 192, 192, 24)
I0116 19:12:59.834347 140116968068992 efficientnet_model.py:390] Expand shape: (16, 192, 192, 144)
I0116 19:12:59.859430 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 144)
I0116 19:12:59.883898 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 144)
I0116 19:12:59.907953 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:12:59.908323 140116968068992 efficientnet_model.py:756] block_6 survival_prob: 0.9478260869565217
I0116 19:12:59.908775 140116968068992 efficientnet_model.py:374] Block blocks_6 input shape: (16, 96, 96, 48)
I0116 19:12:59.934654 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:12:59.958800 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:12:59.983083 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:13:00.009228 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:13:00.009510 140116968068992 efficientnet_model.py:756] block_7 survival_prob: 0.9391304347826087
I0116 19:13:00.009873 140116968068992 efficientnet_model.py:374] Block blocks_7 input shape: (16, 96, 96, 48)
I0116 19:13:00.032675 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:13:00.054806 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 96, 96, 288)
I0116 19:13:00.076944 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:13:00.097565 140116968068992 efficientnet_model.py:414] Project shape: (16, 96, 96, 48)
I0116 19:13:00.097909 140116968068992 efficientnet_model.py:756] block_8 survival_prob: 0.9304347826086956
I0116 19:13:00.098275 140116968068992 efficientnet_model.py:374] Block blocks_8 input shape: (16, 96, 96, 48)
I0116 19:13:00.119194 140116968068992 efficientnet_model.py:390] Expand shape: (16, 96, 96, 288)
I0116 19:13:00.140518 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 288)
I0116 19:13:00.162568 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 288)
I0116 19:13:00.183003 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:13:00.183295 140116968068992 efficientnet_model.py:756] block_9 survival_prob: 0.9217391304347826
I0116 19:13:00.183691 140116968068992 efficientnet_model.py:374] Block blocks_9 input shape: (16, 48, 48, 88)
I0116 19:13:00.208087 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:13:00.230175 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:13:00.253221 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:13:00.274503 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:13:00.274838 140116968068992 efficientnet_model.py:756] block_10 survival_prob: 0.9130434782608696
I0116 19:13:00.275256 140116968068992 efficientnet_model.py:374] Block blocks_10 input shape: (16, 48, 48, 88)
I0116 19:13:00.297037 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:13:00.320545 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:13:00.343262 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:13:00.364369 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:13:00.364679 140116968068992 efficientnet_model.py:756] block_11 survival_prob: 0.9043478260869565
I0116 19:13:00.365062 140116968068992 efficientnet_model.py:374] Block blocks_11 input shape: (16, 48, 48, 88)
I0116 19:13:00.387264 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:13:00.414010 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:13:00.436403 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:13:00.460429 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 88)
I0116 19:13:00.460733 140116968068992 efficientnet_model.py:756] block_12 survival_prob: 0.8956521739130435
I0116 19:13:00.461094 140116968068992 efficientnet_model.py:374] Block blocks_12 input shape: (16, 48, 48, 88)
I0116 19:13:00.482371 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 528)
I0116 19:13:00.504944 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 528)
I0116 19:13:00.528226 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 528)
I0116 19:13:00.548228 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:13:00.548511 140116968068992 efficientnet_model.py:756] block_13 survival_prob: 0.8869565217391304
I0116 19:13:00.548890 140116968068992 efficientnet_model.py:374] Block blocks_13 input shape: (16, 48, 48, 120)
I0116 19:13:00.571057 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:13:00.593262 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:13:00.618086 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:13:00.638691 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:13:00.638984 140116968068992 efficientnet_model.py:756] block_14 survival_prob: 0.8782608695652174
I0116 19:13:00.639363 140116968068992 efficientnet_model.py:374] Block blocks_14 input shape: (16, 48, 48, 120)
I0116 19:13:00.665722 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:13:00.688014 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:13:00.710759 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:13:00.732116 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:13:00.732426 140116968068992 efficientnet_model.py:756] block_15 survival_prob: 0.8695652173913044
I0116 19:13:00.732792 140116968068992 efficientnet_model.py:374] Block blocks_15 input shape: (16, 48, 48, 120)
I0116 19:13:00.754361 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:13:00.776478 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 48, 48, 720)
I0116 19:13:00.799243 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:13:00.824280 140116968068992 efficientnet_model.py:414] Project shape: (16, 48, 48, 120)
I0116 19:13:00.824636 140116968068992 efficientnet_model.py:756] block_16 survival_prob: 0.8608695652173913
I0116 19:13:00.825002 140116968068992 efficientnet_model.py:374] Block blocks_16 input shape: (16, 48, 48, 120)
I0116 19:13:00.846933 140116968068992 efficientnet_model.py:390] Expand shape: (16, 48, 48, 720)
I0116 19:13:00.869744 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 720)
I0116 19:13:00.894999 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 720)
I0116 19:13:00.915792 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:13:00.916093 140116968068992 efficientnet_model.py:756] block_17 survival_prob: 0.8521739130434782
I0116 19:13:00.916488 140116968068992 efficientnet_model.py:374] Block blocks_17 input shape: (16, 24, 24, 208)
I0116 19:13:00.946693 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:13:00.972166 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:13:00.995332 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:13:01.015866 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:13:01.016170 140116968068992 efficientnet_model.py:756] block_18 survival_prob: 0.8434782608695652
I0116 19:13:01.016552 140116968068992 efficientnet_model.py:374] Block blocks_18 input shape: (16, 24, 24, 208)
I0116 19:13:01.042944 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:13:01.068928 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:13:01.092277 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:13:01.116204 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:13:01.116509 140116968068992 efficientnet_model.py:756] block_19 survival_prob: 0.8347826086956522
I0116 19:13:01.116882 140116968068992 efficientnet_model.py:374] Block blocks_19 input shape: (16, 24, 24, 208)
I0116 19:13:01.142578 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:13:01.169439 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:13:01.192982 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:13:01.215073 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:13:01.215385 140116968068992 efficientnet_model.py:756] block_20 survival_prob: 0.8260869565217391
I0116 19:13:01.215750 140116968068992 efficientnet_model.py:374] Block blocks_20 input shape: (16, 24, 24, 208)
I0116 19:13:01.243222 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:13:01.269397 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:13:01.293701 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:13:01.318142 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 208)
I0116 19:13:01.318493 140116968068992 efficientnet_model.py:756] block_21 survival_prob: 0.8173913043478261
I0116 19:13:01.318885 140116968068992 efficientnet_model.py:374] Block blocks_21 input shape: (16, 24, 24, 208)
I0116 19:13:01.347066 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 1248)
I0116 19:13:01.376765 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 1248)
I0116 19:13:01.404233 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 1248)
I0116 19:13:01.424339 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:13:01.424622 140116968068992 efficientnet_model.py:756] block_22 survival_prob: 0.808695652173913
I0116 19:13:01.424982 140116968068992 efficientnet_model.py:374] Block blocks_22 input shape: (16, 24, 24, 352)
I0116 19:13:01.450387 140116968068992 efficientnet_model.py:390] Expand shape: (16, 24, 24, 2112)
I0116 19:13:01.476104 140116968068992 efficientnet_model.py:393] DWConv shape: (16, 24, 24, 2112)
I0116 19:13:01.499405 140116968068992 efficientnet_model.py:195] Built SE se : (16, 1, 1, 2112)
I0116 19:13:01.523222 140116968068992 efficientnet_model.py:414] Project shape: (16, 24, 24, 352)
I0116 19:13:04.815901 140116968068992 det_model_fn.py:81] LR schedule method: cosine
I0116 19:13:05.143568 140116968068992 postprocess.py:85] use max_nms_inputs for pre-nms topk.
I0116 19:13:05.640613 140116968068992 det_model_fn.py:476] Eval val with groudtruths None.
I0116 19:13:05.684008 140116968068992 det_model_fn.py:553] Load EMA vars with ema_decay=0.999800
INFO:tensorflow:Done calling model_fn.
I0116 19:13:06.441232 140116968068992 estimator.py:1164] Done calling model_fn.
INFO:tensorflow:Starting evaluation at 2021-01-16T19:13:06Z
I0116 19:13:06.459048 140116968068992 evaluation.py:255] Starting evaluation at 2021-01-16T19:13:06Z
INFO:tensorflow:Graph was finalized.
I0116 19:13:07.090341 140116968068992 monitored_session.py:246] Graph was finalized.
2021-01-16 19:13:07.090733: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set
2021-01-16 19:13:07.090945: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:13:07.091422: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1720] Found device 0 with properties: 
pciBusID: 0000:00:04.0 name: Tesla T4 computeCapability: 7.5
coreClock: 1.59GHz coreCount: 40 deviceMemorySize: 14.73GiB deviceMemoryBandwidth: 298.08GiB/s
2021-01-16 19:13:07.091494: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudart.so.10.1
2021-01-16 19:13:07.091556: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublas.so.10
2021-01-16 19:13:07.091582: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcublasLt.so.10
2021-01-16 19:13:07.091607: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcufft.so.10
2021-01-16 19:13:07.091629: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcurand.so.10
2021-01-16 19:13:07.091647: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusolver.so.10
2021-01-16 19:13:07.091667: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcusparse.so.10
2021-01-16 19:13:07.091687: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library libcudnn.so.7
2021-01-16 19:13:07.091776: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:13:07.092216: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:13:07.092565: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1862] Adding visible gpu devices: 0
2021-01-16 19:13:07.092628: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1261] Device interconnect StreamExecutor with strength 1 edge matrix:
2021-01-16 19:13:07.092643: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1267]      0 
2021-01-16 19:13:07.092653: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1280] 0:   N 
2021-01-16 19:13:07.092754: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:13:07.093151: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:941] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2021-01-16 19:13:07.093520: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1406] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 13960 MB memory) -> physical GPU (device: 0, name: Tesla T4, pci bus id: 0000:00:04.0, compute capability: 7.5)
INFO:tensorflow:Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-1133
I0116 19:13:07.093682 140116968068992 saver.py:1292] Restoring parameters from ./eagleview/checkpoints/finetuning/model.ckpt-1133
INFO:tensorflow:Running local_init_op.
I0116 19:13:08.760395 140116968068992 session_manager.py:505] Running local_init_op.
INFO:tensorflow:Done running local_init_op.
I0116 19:13:08.847783 140116968068992 session_manager.py:508] Done running local_init_op.
INFO:tensorflow:Evaluation [1/14]
I0116 19:13:14.122227 140116968068992 evaluation.py:167] Evaluation [1/14]
INFO:tensorflow:Evaluation [2/14]
I0116 19:13:14.979941 140116968068992 evaluation.py:167] Evaluation [2/14]
INFO:tensorflow:Evaluation [3/14]
I0116 19:13:16.455946 140116968068992 evaluation.py:167] Evaluation [3/14]
INFO:tensorflow:Evaluation [4/14]
I0116 19:13:18.105385 140116968068992 evaluation.py:167] Evaluation [4/14]
INFO:tensorflow:Evaluation [5/14]
I0116 19:13:19.527277 140116968068992 evaluation.py:167] Evaluation [5/14]
INFO:tensorflow:Evaluation [6/14]
I0116 19:13:20.981117 140116968068992 evaluation.py:167] Evaluation [6/14]
INFO:tensorflow:Evaluation [7/14]
I0116 19:13:22.347079 140116968068992 evaluation.py:167] Evaluation [7/14]
INFO:tensorflow:Evaluation [8/14]
I0116 19:13:23.822736 140116968068992 evaluation.py:167] Evaluation [8/14]
INFO:tensorflow:Evaluation [9/14]
I0116 19:13:25.271412 140116968068992 evaluation.py:167] Evaluation [9/14]
INFO:tensorflow:Evaluation [10/14]
I0116 19:13:26.643028 140116968068992 evaluation.py:167] Evaluation [10/14]
INFO:tensorflow:Evaluation [11/14]
I0116 19:13:27.933359 140116968068992 evaluation.py:167] Evaluation [11/14]
INFO:tensorflow:Evaluation [12/14]
I0116 19:13:29.320553 140116968068992 evaluation.py:167] Evaluation [12/14]
INFO:tensorflow:Evaluation [13/14]
I0116 19:13:30.879901 140116968068992 evaluation.py:167] Evaluation [13/14]
INFO:tensorflow:Evaluation [14/14]
I0116 19:13:32.385779 140116968068992 evaluation.py:167] Evaluation [14/14]
INFO:tensorflow:Inference Time : 37.10074s
I0116 19:13:43.559955 140116968068992 evaluation.py:273] Inference Time : 37.10074s
INFO:tensorflow:Finished evaluation at 2021-01-16-19:13:43
I0116 19:13:43.560250 140116968068992 evaluation.py:276] Finished evaluation at 2021-01-16-19:13:43
INFO:tensorflow:Saving dict for global step 1133: AP = 0.07087194, AP50 = 0.089108914, AP75 = 0.0787058, AP_/car = 0.10186652, AP_/person = 0.039877366, APl = 0.1357828, APm = 0.003960396, APs = 0.0, ARl = 0.14356975, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06930459, ARs = 0.0, box_loss = 0.0042581293, cls_loss = 0.33217365, global_step = 1133, loss = 0.639811
I0116 19:13:43.560444 140116968068992 estimator.py:2066] Saving dict for global step 1133: AP = 0.07087194, AP50 = 0.089108914, AP75 = 0.0787058, AP_/car = 0.10186652, AP_/person = 0.039877366, APl = 0.1357828, APm = 0.003960396, APs = 0.0, ARl = 0.14356975, ARm = 0.0030447193, ARmax1 = 0.0007792327, ARmax10 = 0.007792327, ARmax100 = 0.06930459, ARs = 0.0, box_loss = 0.0042581293, cls_loss = 0.33217365, global_step = 1133, loss = 0.639811
INFO:tensorflow:Saving 'checkpoint_path' summary for global step 1133: ./eagleview/checkpoints/finetuning/model.ckpt-1133
I0116 19:13:43.562077 140116968068992 estimator.py:2127] Saving 'checkpoint_path' summary for global step 1133: ./eagleview/checkpoints/finetuning/model.ckpt-1133
I0116 19:13:43.563584 140116968068992 utils.py:439] Ckpt 0.07087194174528122 is worse than 0.072654

(22400, 7)
0/22400
DONE (t=0.13s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=10.93s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.072
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.080
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.137
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.070
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.144

   =====> Starting training, epoch: 8.

   =====> Starting evaluation, epoch: 8.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.14s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=10.34s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.079
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.136
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.142

   =====> Starting training, epoch: 9.

   =====> Starting evaluation, epoch: 9.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.12s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=10.34s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.079
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.136
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.144

   =====> Starting training, epoch: 10.

   =====> Starting evaluation, epoch: 10.
creating index...
index created!
Loading and preparing results...
Converting ndarray to lists...
(22400, 7)
0/22400
DONE (t=0.12s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=10.55s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.089
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.079
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.136
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.008
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.144
